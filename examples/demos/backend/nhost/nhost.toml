[global]

[hasura]
version = 'v2.46.0-ce'
adminSecret = '{{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}'
webhookSecret = '{{ secrets.NHOST_WEBHOOK_SECRET }}'

[[hasura.jwtSecrets]]
type = 'HS256'
key = '{{ secrets.HASURA_GRAPHQL_JWT_SECRET }}'

[hasura.settings]
corsDomain = ['*']
devMode = true
enableAllowList = false
enableConsole = true
enableRemoteSchemaPermissions = false
enabledAPIs = ['metadata', 'graphql', 'pgdump', 'config']
inferFunctionPermissions = true
liveQueriesMultiplexedRefetchInterval = 1000
stringifyNumericTypes = false

[hasura.logs]
level = 'warn'

[hasura.events]
httpPoolSize = 100

[functions]
[functions.node]
version = 20

[auth]
version = '0.41.1'

[auth.elevatedPrivileges]
mode = 'disabled'

[auth.redirections]
clientUrl = 'http://localhost:3000'
allowedUrls = ['http://localhost:5173', 'exp://192.168.1.103:8081']

[auth.signUp]
enabled = true
disableNewUsers = false

[auth.user]
[auth.user.roles]
default = 'user'
allowed = ['user', 'me']

[auth.user.locale]
default = 'en'
allowed = ['en']

[auth.user.gravatar]
enabled = true
default = 'blank'
rating = 'g'

[auth.user.email]

[auth.user.emailDomains]

[auth.session]
[auth.session.accessToken]
expiresIn = 65

[auth.session.refreshToken]
expiresIn = 2592000

[auth.method]
[auth.method.anonymous]
enabled = false

[auth.method.emailPasswordless]
enabled = true

[auth.method.otp]
[auth.method.otp.email]
enabled = false

[auth.method.emailPassword]
hibpEnabled = false
emailVerificationRequired = false
passwordMinLength = 9

[auth.method.smsPasswordless]
enabled = false

[auth.method.oauth]
[auth.method.oauth.apple]
enabled = true
teamId = '{{ secrets.APPLE_TEAM_ID }}'
clientId = '{{ secrets.APPLE_CLIENT_ID }}'
audience = '{{ secrets.APPLE_AUDIENCE }}'
keyId = '{{ secrets.APPLE_KEY_ID }}'
privateKey = '{{ secrets.APPLE_PRIVATE_KEY }}'

[auth.method.oauth.azuread]
tenant = 'common'
enabled = false

[auth.method.oauth.bitbucket]
enabled = false

[auth.method.oauth.discord]
enabled = false

[auth.method.oauth.facebook]
enabled = false

[auth.method.oauth.github]
enabled = true
clientId = '{{ secrets.GITHUB_CLIENT_ID }}'
clientSecret = '{{ secrets.GITHUB_CLIENT_SECRET }}'

[auth.method.oauth.gitlab]
enabled = false

[auth.method.oauth.google]
enabled = false

[auth.method.oauth.linkedin]
enabled = false

[auth.method.oauth.spotify]
enabled = false

[auth.method.oauth.strava]
enabled = false

[auth.method.oauth.twitch]
enabled = false

[auth.method.oauth.twitter]
enabled = false

[auth.method.oauth.windowslive]
enabled = false

[auth.method.oauth.workos]
enabled = false

[auth.method.webauthn]
enabled = true

[auth.method.webauthn.relyingParty]
id = 'localhost'
name = 'nhost-sdk-experiment'
origins = ['http://localhost:3000', 'http://localhost:5173']

[auth.method.webauthn.attestation]
timeout = 60000

[auth.totp]
enabled = true
issuer = 'new-sdk'

[auth.misc]
concealErrors = false

[auth.rateLimit]
[auth.rateLimit.emails]
limit = 10
interval = '1h'

[auth.rateLimit.sms]
limit = 100
interval = '1h'

[auth.rateLimit.bruteForce]
limit = 100
interval = '5m'

[auth.rateLimit.signups]
limit = 100
interval = '5m'

[auth.rateLimit.global]
limit = 1000
interval = '1m'

[postgres]
version = '17.5-20250728-1'

[postgres.resources]
[postgres.resources.storage]
capacity = 1

[provider]

[storage]
version = '0.8.0-beta3'

[observability]
[observability.grafana]
adminPassword = '{{ secrets.GRAFANA_ADMIN_PASSWORD }}'

[observability.grafana.alerting]
enabled = false

[observability.grafana.contacts]
