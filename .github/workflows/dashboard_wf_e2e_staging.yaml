---
on:
  workflow_call:
    inputs:
      NAME:
        type: string
        required: true
      PATH:
        type: string
        required: true
      GIT_REF:
        type: string
        required: false
      NHOST_TEST_DASHBOARD_URL:
        type: string
        required: true
      NHOST_TEST_PROJECT_NAME:
        type: string
        required: true
      NHOST_TEST_ORGANIZATION_NAME:
        type: string
        required: true
      NHOST_TEST_ORGANIZATION_SLUG:
        type: string
        required: true
      NHOST_TEST_PERSONAL_ORG_SLUG:
        type: string
        required: true
      NHOST_TEST_PROJECT_SUBDOMAIN:
        type: string
        required: true
      NHOST_TEST_PROJECT_REMOTE_SCHEMA_NAME:
        type: string
        required: true
      NHOST_PRO_TEST_PROJECT_NAME:
        type: string
        required: true
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      NIX_CACHE_PUB_KEY:
        required: true
      NIX_CACHE_PRIV_KEY:
        required: true
      DASHBOARD_VERCEL_DEPLOY_TOKEN:
        required: true
      DASHBOARD_VERCEL_TEAM_ID:
        required: true
      DASHBOARD_STAGING_VERCEL_PROJECT_ID:
        required: true
      NHOST_TEST_USER_EMAIL:
        required: true
      NHOST_TEST_USER_PASSWORD:
        required: true
      NHOST_TEST_ONBOARDING_USER:
        required: true
      NHOST_TEST_PROJECT_ADMIN_SECRET:
        required: true
      PLAYWRIGHT_REPORT_ENCRYPTION_KEY:
        required: true
      NHOST_TEST_STAGING_SUBDOMAIN:
        required: true
      NHOST_TEST_STAGING_REGION:
        required: true

concurrency:
  group: dashboard-e2e-staging
  cancel-in-progress: false

env:
  NEXT_PUBLIC_ENV: dev
  NEXT_TELEMETRY_DISABLED: 1
  NHOST_TEST_DASHBOARD_URL: ${{ inputs.NHOST_TEST_DASHBOARD_URL }}
  NHOST_TEST_PROJECT_NAME: ${{ inputs.NHOST_TEST_PROJECT_NAME }}
  NHOST_TEST_ORGANIZATION_NAME: ${{ inputs.NHOST_TEST_ORGANIZATION_NAME }}
  NHOST_TEST_ORGANIZATION_SLUG: ${{ inputs.NHOST_TEST_ORGANIZATION_SLUG }}
  NHOST_TEST_PERSONAL_ORG_SLUG: ${{ inputs.NHOST_TEST_PERSONAL_ORG_SLUG }}
  NHOST_TEST_PROJECT_SUBDOMAIN: ${{ inputs.NHOST_TEST_PROJECT_SUBDOMAIN }}
  NHOST_TEST_PROJECT_REMOTE_SCHEMA_NAME: ${{ inputs.NHOST_TEST_PROJECT_REMOTE_SCHEMA_NAME }}
  NHOST_PRO_TEST_PROJECT_NAME: ${{ inputs.NHOST_PRO_TEST_PROJECT_NAME }}
  NHOST_TEST_USER_EMAIL: ${{ secrets.NHOST_TEST_USER_EMAIL }}
  NHOST_TEST_USER_PASSWORD: ${{ secrets.NHOST_TEST_USER_PASSWORD }}
  NHOST_TEST_PROJECT_ADMIN_SECRET: ${{ secrets.NHOST_TEST_PROJECT_ADMIN_SECRET }}
  NHOST_TEST_ONBOARDING_USER: ${{ secrets.NHOST_TEST_ONBOARDING_USER }}
  NHOST_TEST_STAGING_SUBDOMAIN: ${{ secrets.NHOST_TEST_STAGING_SUBDOMAIN }}
  NHOST_TEST_STAGING_REGION: ${{ secrets.NHOST_TEST_STAGING_REGION }}


jobs:
  tests:
    runs-on: blacksmith-2vcpu-ubuntu-2404
    timeout-minutes: 30

    defaults:
      run:
        working-directory: ${{ inputs.PATH }}

    permissions:
      id-token: write
      contents: write
      actions: read

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.GIT_REF }}

    - name: Collect Workflow Telemetry
      uses: catchpoint/workflow-telemetry-action@v2
      with:
        comment_on_pr: false

    - name: Configure aws
      uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-nhost-${{ github.event.repository.name }}
        aws-region: eu-central-1

    - name: Setup Nix with Cache
      uses: ./.github/actions/setup-nix
      with:
        NAME: ${{ inputs.NAME }}
        NIX_CACHE_PUB_KEY: ${{ secrets.NIX_CACHE_PUB_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Start CLI
      run: |
        nix develop .\#dashboard -c make dev-env-cli-up

    - name: Run e2e tests
      run: nix develop .\#dashboard -c pnpm e2e

    - name: Run e2e onboarding tests
      run: nix develop .\#dashboard -c pnpm e2e:onboarding

    - name: Run e2e local tests
      run: nix develop .\#dashboard -c pnpm e2e:local

    - name: Encrypt Playwright report
      if: failure()
      run: |
        tar -czf playwright-report.tar.gz playwright-report/
        openssl enc -aes-256-cbc -salt -pbkdf2 -iter 100000 \
          -in playwright-report.tar.gz \
          -out playwright-report.tar.gz.enc \
          -k "${{ secrets.PLAYWRIGHT_REPORT_ENCRYPTION_KEY }}"
        rm playwright-report.tar.gz

    - name: Upload encrypted Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: encrypted-playwright-report-${{ github.run_id }}
        path: dashboard/playwright-report.tar.gz.enc
        retention-days: 1

    - name: "Store Nix cache"
      uses: ./.github/actions/cache-nix
      with:
        NIX_CACHE_PRIV_KEY: ${{ secrets.NIX_CACHE_PRIV_KEY }}
      if: always()
