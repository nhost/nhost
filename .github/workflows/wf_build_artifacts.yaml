---
on:
  workflow_call:
    inputs:
      NAME:
        type: string
        required: true
      GIT_REF:
        type: string
        required: false
      VERSION:
        type: string
        required: true
      PATH:
        type: string
        required: true
      DOCKER:
        type: boolean
        required: true
      OS_MATRIX:
        type: string
        required: false
        default: '["blacksmith-4vcpu-ubuntu-2404-arm", "blacksmith-2vcpu-ubuntu-2404"]'
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      NIX_CACHE_PUB_KEY:
        required: true
      NIX_CACHE_PRIV_KEY:
        required: true

jobs:
  artifacts:
    permissions:
      id-token: write
      contents: write

    defaults:
      run:
        working-directory: ${{ inputs.PATH }}

    strategy:
      matrix:
        os: ${{ fromJSON(inputs.OS_MATRIX) }}
      fail-fast: true

    runs-on: ${{ matrix.os }}
    timeout-minutes: 180

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.GIT_REF }}

    - name: "Validate PR title"
      uses: ./.github/actions/validate-pr-title
      with:
        pr_title: ${{ github.event.pull_request.title }}
      if: ${{ github.event_name == 'pull_request' }}

    - name: Configure aws
      uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-nhost-${{ github.event.repository.name }}
        aws-region: eu-central-1

    - name: Setup Nix with Cache
      uses: ./.github/actions/setup-nix
      with:
        NAME: ${{ inputs.NAME }}
        NIX_CACHE_PUB_KEY: ${{ secrets.NIX_CACHE_PUB_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Compute common env vars
      id: vars
      run: |
        echo "VERSION=$(make get-version VER=${{ inputs.VERSION }})" >> $GITHUB_OUTPUT
        ARCH=$([ "${{ runner.arch }}" == "X64" ] && echo "x86_64" || echo "aarch64")
        echo "ARCH=${ARCH}" >> $GITHUB_OUTPUT

    - name: "Build artifact"
      run: |
        make build
        zip -r result.zip result

    - name: "Push artifact to artifact repository"
      uses: actions/upload-artifact@v5
      with:
        name: ${{ inputs.NAME }}-artifact-${{ steps.vars.outputs.ARCH }}-${{ steps.vars.outputs.VERSION }}
        path: ${{ inputs.PATH }}/result.zip
        retention-days: 7

    - name: "Build docker image"
      run: |
        sudo chmod 755 /run/containers
        sudo mkdir -p "/run/containers/$(id -u runner)"
        sudo chown runner: "/run/containers/$(id -u runner)"
        make build-docker-image
      if: ${{ ( inputs.DOCKER ) }}

    - name: "Push docker image to artifact repository"
      uses: actions/upload-artifact@v5
      with:
        name: ${{ inputs.NAME }}-docker-image-${{ steps.vars.outputs.ARCH }}-${{ steps.vars.outputs.VERSION }}
        path: ${{ inputs.PATH }}/result
        retention-days: 7
      if: ${{ ( inputs.DOCKER ) }}

    - name: "Store Nix cache"
      uses: ./.github/actions/cache-nix
      with:
        NIX_CACHE_PRIV_KEY: ${{ secrets.NIX_CACHE_PRIV_KEY }}
      if: always()
