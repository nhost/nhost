---
name: "cli: release"
on:
  workflow_call:
    inputs:
      GIT_REF:
        required: true
        type: string
      VERSION:
        required: true
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      NIX_CACHE_PUB_KEY:
        required: true
      NIX_CACHE_PRIV_KEY:
        required: true
      GH_PAT:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build_artifacts:
    uses: ./.github/workflows/wf_build_artifacts.yaml
    with:
      NAME: cli
      PATH: cli
      GIT_REF: ${{ inputs.GIT_REF }}
      VERSION: ${{ inputs.VERSION }}
      DOCKER: true
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      NIX_CACHE_PUB_KEY: ${{ secrets.NIX_CACHE_PUB_KEY }}
      NIX_CACHE_PRIV_KEY: ${{ secrets.NIX_CACHE_PRIV_KEY }}

  push-docker:
    uses: ./.github/workflows/wf_docker_push_image.yaml
    needs:
      - build_artifacts
    with:
      NAME: cli
      PATH: cli
      VERSION: ${{ inputs.VERSION }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  build-multiplatform:
    permissions:
      id-token: write
      contents: write

    defaults:
      run:
        working-directory: cli

    runs-on: blacksmith-2vcpu-ubuntu-2404
    timeout-minutes: 180

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.GIT_REF }}

    - name: Configure aws
      uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-nhost-${{ github.event.repository.name }}
        aws-region: eu-central-1

    - name: Setup Nix with Cache
      uses: ./.github/actions/setup-nix
      with:
        NAME: cli
        NIX_CACHE_PUB_KEY: ${{ secrets.NIX_CACHE_PUB_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Compute common env vars
      id: vars
      run: |
        echo "VERSION=$(make get-version VER=${{ inputs.VERSION }})" >> $GITHUB_OUTPUT
        ARCH=$([ "${{ runner.arch }}" == "X64" ] && echo "x86_64" || echo "aarch64")
        echo "ARCH=${ARCH}" >> $GITHUB_OUTPUT

    - name: "Build artifact"
      run: |
        make build-multiplatform

    - name: "Upload assets"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        export VERSION=${{ steps.vars.outputs.VERSION }}

        mkdir upload

        tar cvzf upload/cli-$VERSION-darwin-amd64.tar.gz -C result/darwin/amd64 cli
        tar cvzf upload/cli-$VERSION-darwin-arm64.tar.gz -C result/darwin/arm64 cli
        tar cvzf upload/cli-$VERSION-linux-amd64.tar.gz -C result/linux/amd64 cli
        tar cvzf upload/cli-$VERSION-linux-arm64.tar.gz -C result/linux/arm64 cli

        cd upload
        find . -type f -exec sha256sum {} + > ../checksums.txt
        cd ..

        cat checksums.txt

        gh release upload \
          --clobber "${{ github.ref_name }}" \
          ./upload/* checksums.txt

    - name: "Store Nix cache"
      uses: ./.github/actions/cache-nix
      with:
        NIX_CACHE_PRIV_KEY: ${{ secrets.NIX_CACHE_PRIV_KEY }}
      if: always()
