name: Release

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'assets/**'
      - '**.md'
      - '!.changeset/**'
      - 'LICENSE'
  workflow_dispatch:

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: nhost
  DASHBOARD_PACKAGE: '@nhost/dashboard'

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
      dashboardVersion: ${{ steps.dashboard.outputs.dashboardVersion }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
        with:
          TURBO_TOKEN: ${{ env.TURBO_TOKEN }}
          TURBO_TEAM: ${{ env.TURBO_TEAM }}
      - name: Create PR or Publish release
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run ci:version
          commit: 'chore: update versions'
          title: 'chore: update versions'
          publish: pnpm run release
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Check Dashboard tag
        id: dashboard
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          DASHBOARD_VERSION=$(jq -r .version dashboard/package.json)
          GIT_TAG="${{ env.DASHBOARD_PACKAGE}}@$DASHBOARD_VERSION"
          if [ -z "$(git tag -l | grep $GIT_TAG)" ]; then
            echo "dashboardVersion=$DASHBOARD_VERSION" >> $GITHUB_OUTPUT
          fi

  test:
    needs: version
    name: Dashboard
    if: needs.version.outputs.dashboardVersion != ''
    uses: ./.github/workflows/dashboard.yaml
    secrets: inherit

  publish-vercel:
    name: Publish to Vercel
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
        with:
          TURBO_TOKEN: ${{ env.TURBO_TOKEN }}
          TURBO_TEAM: ${{ env.TURBO_TEAM }}
      - name: Setup Vercel CLI
        run: pnpm add -g vercel
      - name: Trigger a Vercel deployment
        env:
          VERCEL_ORG_ID: ${{ secrets.DASHBOARD_VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.DASHBOARD_VERCEL_PROJECT_ID }}
        run: |
          vercel pull --environment=production --token=${{ secrets.DASHBOARD_VERCEL_DEPLOY_TOKEN }}
          vercel build --prod --token=${{ secrets.DASHBOARD_VERCEL_DEPLOY_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.DASHBOARD_VERCEL_DEPLOY_TOKEN }}

  publish-docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - test
      - version
      - publish-vercel
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add git tag
        run: |
          git tag "${{ env.DASHBOARD_PACKAGE }}@${{ needs.version.outputs.dashboardVersion }}"
          git push origin --tags
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            nhost/dashboard
          tags: |
            type=raw,value=latest,enable=true
            type=semver,pattern={{version}},value=v${{ needs.version.outputs.dashboardVersion }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ needs.version.outputs.dashboardVersion }}
            type=semver,pattern={{major}},value=v${{ needs.version.outputs.dashboardVersion }}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v4
        timeout-minutes: 90
        with:
          context: .
          file: ./dashboard/Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TURBO_TOKEN=${{ env.TURBO_TOKEN }}
            TURBO_TEAM=${{ env.TURBO_TEAM }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  bump-cli:
    name: Bump Dashboard version in the Nhost CLI
    runs-on: ubuntu-latest
    needs:
      - version
      - publish-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: nhost/cli
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
      - name: Bump version in source code
        run: |
          IMAGE=$(echo ${{ env.DASHBOARD_PACKAGE }} | sed 's/@\(.\+\)\/\(.\+\)/\1\\\/\2/g')
          VERSION="${{ needs.version.outputs.dashboardVersion }}"
          EXPRESSION='s/"'$IMAGE':[0-9]\+\.[0-9]\+\.[0-9]\+"/"'$IMAGE':'$VERSION'"/g'
          find ./ -type f -exec sed -i -e $EXPRESSION {} \;
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: 'chore: bump nhost/dashboard to ${{ needs.version.outputs.dashboardVersion }}'
          branch: bump-dashboard-version
          delete-branch: true
          title: 'chore: bump nhost/dashboard to ${{ needs.version.outputs.dashboardVersion }}'
          body: |
            This PR bumps the Nhost Dashboard Docker image to version ${{ needs.version.outputs.dashboardVersion }}.
