name: Tests

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'assets/**'
      - '**.md'
      - 'LICENSE'
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths-ignore:
      - 'docs/**'
      - 'assets/**'
      - '**.md'
      - 'LICENSE'

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: nhost
jobs:
  build:
    name: Build @nhost packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # * Install Node and dependencies. Package downloads will be cached for the next jobs.
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
      # * List packagesthat has an `e2e` script, except the root, and return an array of their name and path
      # * In a PR, only include packages that have been modified, and their dependencies
      - name: List examples with an e2e script
        id: set-matrix
        run: |
          PACKAGES=$(pnpm recursive list --depth -1 --parseable --filter=!nhost-root \
            | ${{ github.event_name == 'pull_request' && format(' --filter=[...{0}]', github.base_ref) || '' }}
            | xargs -I@ jq "if (.scripts.e2e | length) != 0  then {name: .name, path: \"@\"} else null end" @/package.json \
            | awk "!/null/" \
            | jq -c --slurp)
          echo "matrix=$PACKAGES" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  e2e:
    name: 'e2e: ${{ matrix.package.name }}'
    needs: build
    strategy:
      # * Don't cancel other matrices when one fails
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.build.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # * Install Node and dependencies. Package dependencies won't be downloaded again as they have been cached by the `build` job.
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
      # * Install Nhost CLI if a `nhost/config.yaml` file is found
      - name: Install Nhost CLI
        if: hashFiles(format('{0}/nhost/config.yaml', matrix.package.path)) != ''
        run: curl -L https://raw.githubusercontent.com/nhost/cli/main/get.sh | bash
      # * Run the `ci` script of the current package of the matrix. Dependencies build is cached by Turborepo
      - name: Run e2e test
        run: pnpm --filter="${{ matrix.package.name }}" run e2e
      - id: file-name
        if: ${{ failure() }}
        name: Tranform package name into a valid file name
        run: |
          PACKAGE_FILE_NAME=$(echo "${{ matrix.package.name }}" | sed 's/@//g; s/\//-/g')
          echo "fileName=$PACKAGE_FILE_NAME"  >> $GITHUB_OUTPUT
      # * Run this step only if the previous step failed, and some Cypress screenshots/videos exist
      - name: Upload Cypress videos and screenshots
        if: ${{ failure() && hashFiles(format('{0}/cypress/screenshots/**', matrix.package.path), format('{0}/cypress/videos/**', matrix.package.path)) != ''}}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-${{ steps.file-name.outputs.fileName }}
          path: |
            ${{format('{0}/cypress/screenshots/**', matrix.package.path)}}
            ${{format('{0}/cypress/videos/**', matrix.package.path)}}
  unit:
    name: Unit tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # * Install Node and dependencies. Package dependencies won't be downloaded again as they have been cached by the `build` job.
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
      # * Run every `test` script in the workspace . Dependencies build is cached by Turborepo
      - name: Run unit tests
        run: pnpm run test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: '**/coverage/coverage-final.json'
          name: codecov-umbrella
      - name: Create summary
        run: |
          echo '### Code coverage' >> $GITHUB_STEP_SUMMARY
          echo 'Visit [codecov](https://app.codecov.io/gh/nhost/nhost/) to see the code coverage reports' >> $GITHUB_STEP_SUMMARY
  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # * Install Node and dependencies. Package dependencies won't be downloaded again as they have been cached by the `build` job.
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
      # * Run every `lint` script in the workspace . Dependencies build is cached by Turborepo
      - name: Lint
        run: pnpm run lint
