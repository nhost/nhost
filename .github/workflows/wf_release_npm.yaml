---
on:
  workflow_call:
    inputs:
      NAME:
        type: string
        required: true
      PATH:
        type: string
        required: true
      VERSION:
        type: string
        required: true
    secrets:
      NPM_TOKEN:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      NIX_CACHE_PUB_KEY:
        required: true
      NIX_CACHE_PRIV_KEY:
        required: true
      DISCORD_WEBHOOK:
        required: false

jobs:
  release:
    runs-on: blacksmith-2vcpu-ubuntu-2404
    timeout-minutes: 30

    defaults:
      run:
        working-directory: ${{ inputs.PATH }}

    permissions:
      id-token: write
      contents: write
      actions: read

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v5

    - name: Configure aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-nhost-${{ github.event.repository.name }}
        aws-region: eu-central-1

    - name: Setup Nix with Cache
      uses: ./.github/actions/setup-nix
      with:
        NAME: ${{ inputs.NAME }}
        NIX_CACHE_PUB_KEY: ${{ secrets.NIX_CACHE_PUB_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "Build package"
      run: make build

    - name: "Copy build output"
      run: cp -r result/dist .

    - name: "Set package version"
      run: |
        nix develop .#pnpm -c pnpm version ${{ inputs.VERSION }} --no-git-tag-version

    - name: "Determine npm tag"
      id: npm-tag
      run: |
        if [[ "${{ inputs.VERSION }}" =~ (alpha|beta|dev|rc) ]]; then
          echo "tag=beta" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi

    - name: "Publish to npm"
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        nix develop .#pnpm -c pnpm publish --tag ${{ steps.npm-tag.outputs.tag }} --no-git-checks

    - name: Send Discord notification
      if: always()
      uses: ./.github/actions/discord-notification
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        title: "Published ${{ inputs.NAME }}@${{ inputs.VERSION }} to npm"
        description: |
          **Status**: ${{ job.status }}
          **Tag**: ${{ steps.npm-tag.outputs.tag }}
          **Triggered by**: ${{ github.actor }}

          **Details**:
          - Version: ${{ inputs.VERSION }}
          - Package: ${{ inputs.NAME }}
        color: ${{ job.status == 'success' && '5763719' || '15548997' }}
