// Code generated by "stringer -type=Op -linecomment"; DO NOT EDIT.

package adt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NoOp-0]
	_ = x[AndOp-1]
	_ = x[OrOp-2]
	_ = x[SelectorOp-3]
	_ = x[IndexOp-4]
	_ = x[SliceOp-5]
	_ = x[CallOp-6]
	_ = x[BoolAndOp-7]
	_ = x[BoolOrOp-8]
	_ = x[EqualOp-9]
	_ = x[NotOp-10]
	_ = x[NotEqualOp-11]
	_ = x[LessThanOp-12]
	_ = x[LessEqualOp-13]
	_ = x[GreaterThanOp-14]
	_ = x[GreaterEqualOp-15]
	_ = x[MatchOp-16]
	_ = x[NotMatchOp-17]
	_ = x[AddOp-18]
	_ = x[SubtractOp-19]
	_ = x[MultiplyOp-20]
	_ = x[FloatQuotientOp-21]
	_ = x[IntQuotientOp-22]
	_ = x[IntRemainderOp-23]
	_ = x[IntDivideOp-24]
	_ = x[IntModuloOp-25]
	_ = x[InterpolationOp-26]
}

const _Op_name = "NoOp&|.[][:]()&&||==!!=<<=>>==~!~+-*/quoremdivmod\\()"

var _Op_index = [...]uint8{0, 4, 5, 6, 7, 9, 12, 14, 16, 18, 20, 21, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 37, 40, 43, 46, 49, 52}

func (i Op) String() string {
	if i < 0 || i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
