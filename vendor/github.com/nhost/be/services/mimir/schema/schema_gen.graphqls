# Code generated by github.com/nhost/be/tools/cuegraph, DO NOT EDIT.

scalar ConfigInt8

input ConfigInt8ComparisonExp {
    _eq: ConfigInt8
    _neq: ConfigInt8
    _in: [ConfigInt8!]
    _nin: [ConfigInt8!]
}

scalar ConfigInt16

input ConfigInt16ComparisonExp {
    _eq: ConfigInt16
    _neq: ConfigInt16
    _in: [ConfigInt16!]
    _nin: [ConfigInt16!]
}

scalar ConfigInt32

input ConfigInt32ComparisonExp {
    _eq: ConfigInt32
    _neq: ConfigInt32
    _in: [ConfigInt32!]
    _nin: [ConfigInt32!]
}

scalar ConfigInt64

input ConfigInt64ComparisonExp {
    _eq: ConfigInt64
    _neq: ConfigInt64
    _in: [ConfigInt64!]
    _nin: [ConfigInt64!]
}

scalar ConfigUint

input ConfigUintComparisonExp {
    _eq: ConfigUint
    _neq: ConfigUint
    _in: [ConfigUint!]
    _nin: [ConfigUint!]
}

scalar ConfigUint8

input ConfigUint8ComparisonExp {
    _eq: ConfigUint8
    _neq: ConfigUint8
    _in: [ConfigUint8!]
    _nin: [ConfigUint8!]
}

scalar ConfigUint16

input ConfigUint16ComparisonExp {
    _eq: ConfigUint16
    _neq: ConfigUint16
    _in: [ConfigUint16!]
    _nin: [ConfigUint16!]
}

scalar ConfigUint32

input ConfigUint32ComparisonExp {
    _eq: ConfigUint32
    _neq: ConfigUint32
    _in: [ConfigUint32!]
    _nin: [ConfigUint32!]
}

scalar ConfigUint64

input ConfigUint64ComparisonExp {
    _eq: ConfigUint64
    _neq: ConfigUint64
    _in: [ConfigUint64!]
    _nin: [ConfigUint64!]
}

input ConfigStringComparisonExp {
    _eq: String
    _neq: String
    _in: [String!]
    _nin: [String!]
}

input ConfigIntComparisonExp {
    _eq: Int
    _neq: Int
    _in: [Int!]
    _nin: [Int!]
}

input ConfigFloatComparisonExp {
    _eq: Float
    _neq: Float
    _in: [Float!]
    _nin: [Float!]
}

input ConfigBooleanComparisonExp {
    _eq: Boolean
    _neq: Boolean
    _in: [Boolean!]
    _nin: [Boolean!]
}

"""

"""
type ConfigAI {
    """

    """
    version: String
    """

    """
    resources: ConfigAIResources!
    """

    """
    openai: ConfigAIOpenai!
    """

    """
    autoEmbeddings: ConfigAIAutoEmbeddings
    """

    """
    webhookSecret: String!
}

input ConfigAIUpdateInput {
    version: String
    resources: ConfigAIResourcesUpdateInput
    openai: ConfigAIOpenaiUpdateInput
    autoEmbeddings: ConfigAIAutoEmbeddingsUpdateInput
    webhookSecret: String
}

input ConfigAIInsertInput {
    version: String
    resources: ConfigAIResourcesInsertInput!
    openai: ConfigAIOpenaiInsertInput!
    autoEmbeddings: ConfigAIAutoEmbeddingsInsertInput
    webhookSecret: String!
}

input ConfigAIComparisonExp {
    _and: [ConfigAIComparisonExp!]
    _not: ConfigAIComparisonExp
    _or: [ConfigAIComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigAIResourcesComparisonExp
    openai: ConfigAIOpenaiComparisonExp
    autoEmbeddings: ConfigAIAutoEmbeddingsComparisonExp
    webhookSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAIAutoEmbeddings {
    """

    """
    synchPeriodMinutes: ConfigUint32
}

input ConfigAIAutoEmbeddingsUpdateInput {
    synchPeriodMinutes: ConfigUint32
}

input ConfigAIAutoEmbeddingsInsertInput {
    synchPeriodMinutes: ConfigUint32
}

input ConfigAIAutoEmbeddingsComparisonExp {
    _and: [ConfigAIAutoEmbeddingsComparisonExp!]
    _not: ConfigAIAutoEmbeddingsComparisonExp
    _or: [ConfigAIAutoEmbeddingsComparisonExp!]
    synchPeriodMinutes: ConfigUint32ComparisonExp
}

"""

"""
type ConfigAIOpenai {
    """

    """
    organization: String
    """

    """
    apiKey: String!
}

input ConfigAIOpenaiUpdateInput {
    organization: String
    apiKey: String
}

input ConfigAIOpenaiInsertInput {
    organization: String
    apiKey: String!
}

input ConfigAIOpenaiComparisonExp {
    _and: [ConfigAIOpenaiComparisonExp!]
    _not: ConfigAIOpenaiComparisonExp
    _or: [ConfigAIOpenaiComparisonExp!]
    organization: ConfigStringComparisonExp
    apiKey: ConfigStringComparisonExp
}

"""

"""
type ConfigAIResources {
    """

    """
    compute: ConfigComputeResources!
}

input ConfigAIResourcesUpdateInput {
    compute: ConfigComputeResourcesUpdateInput
}

input ConfigAIResourcesInsertInput {
    compute: ConfigComputeResourcesInsertInput!
}

input ConfigAIResourcesComparisonExp {
    _and: [ConfigAIResourcesComparisonExp!]
    _not: ConfigAIResourcesComparisonExp
    _or: [ConfigAIResourcesComparisonExp!]
    compute: ConfigComputeResourcesComparisonExp
}

"""
Configuration for auth service
You can find more information about the configuration here:
https://github.com/nhost/hasura-auth/blob/main/docs/environment-variables.md
"""
type ConfigAuth {
    """
    Version of auth, you can see available versions in the URL below:
    https://hub.docker.com/r/nhost/hasura-auth/tags
    
    Releases:
    
    https://github.com/nhost/hasura-auth/releases
    """
    version: String
    """
    Resources for the service
    """
    resources: ConfigResources
    """

    """
    elevatedPrivileges: ConfigAuthElevatedPrivileges
    """

    """
    redirections: ConfigAuthRedirections
    """

    """
    signUp: ConfigAuthSignUp
    """

    """
    user: ConfigAuthUser
    """

    """
    session: ConfigAuthSession
    """

    """
    method: ConfigAuthMethod
    """

    """
    totp: ConfigAuthTotp
    """

    """
    misc: ConfigAuthMisc
    """

    """
    rateLimit: ConfigAuthRateLimit
}

input ConfigAuthUpdateInput {
    version: String
    resources: ConfigResourcesUpdateInput
    elevatedPrivileges: ConfigAuthElevatedPrivilegesUpdateInput
    redirections: ConfigAuthRedirectionsUpdateInput
    signUp: ConfigAuthSignUpUpdateInput
    user: ConfigAuthUserUpdateInput
    session: ConfigAuthSessionUpdateInput
    method: ConfigAuthMethodUpdateInput
    totp: ConfigAuthTotpUpdateInput
    misc: ConfigAuthMiscUpdateInput
    rateLimit: ConfigAuthRateLimitUpdateInput
}

input ConfigAuthInsertInput {
    version: String
    resources: ConfigResourcesInsertInput
    elevatedPrivileges: ConfigAuthElevatedPrivilegesInsertInput
    redirections: ConfigAuthRedirectionsInsertInput
    signUp: ConfigAuthSignUpInsertInput
    user: ConfigAuthUserInsertInput
    session: ConfigAuthSessionInsertInput
    method: ConfigAuthMethodInsertInput
    totp: ConfigAuthTotpInsertInput
    misc: ConfigAuthMiscInsertInput
    rateLimit: ConfigAuthRateLimitInsertInput
}

input ConfigAuthComparisonExp {
    _and: [ConfigAuthComparisonExp!]
    _not: ConfigAuthComparisonExp
    _or: [ConfigAuthComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigResourcesComparisonExp
    elevatedPrivileges: ConfigAuthElevatedPrivilegesComparisonExp
    redirections: ConfigAuthRedirectionsComparisonExp
    signUp: ConfigAuthSignUpComparisonExp
    user: ConfigAuthUserComparisonExp
    session: ConfigAuthSessionComparisonExp
    method: ConfigAuthMethodComparisonExp
    totp: ConfigAuthTotpComparisonExp
    misc: ConfigAuthMiscComparisonExp
    rateLimit: ConfigAuthRateLimitComparisonExp
}

"""

"""
type ConfigAuthElevatedPrivileges {
    """

    """
    mode: String
}

input ConfigAuthElevatedPrivilegesUpdateInput {
    mode: String
}

input ConfigAuthElevatedPrivilegesInsertInput {
    mode: String
}

input ConfigAuthElevatedPrivilegesComparisonExp {
    _and: [ConfigAuthElevatedPrivilegesComparisonExp!]
    _not: ConfigAuthElevatedPrivilegesComparisonExp
    _or: [ConfigAuthElevatedPrivilegesComparisonExp!]
    mode: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethod {
    """

    """
    anonymous: ConfigAuthMethodAnonymous
    """

    """
    emailPasswordless: ConfigAuthMethodEmailPasswordless
    """

    """
    otp: ConfigAuthMethodOtp
    """

    """
    emailPassword: ConfigAuthMethodEmailPassword
    """

    """
    smsPasswordless: ConfigAuthMethodSmsPasswordless
    """

    """
    oauth: ConfigAuthMethodOauth
    """

    """
    webauthn: ConfigAuthMethodWebauthn
}

input ConfigAuthMethodUpdateInput {
    anonymous: ConfigAuthMethodAnonymousUpdateInput
    emailPasswordless: ConfigAuthMethodEmailPasswordlessUpdateInput
    otp: ConfigAuthMethodOtpUpdateInput
    emailPassword: ConfigAuthMethodEmailPasswordUpdateInput
    smsPasswordless: ConfigAuthMethodSmsPasswordlessUpdateInput
    oauth: ConfigAuthMethodOauthUpdateInput
    webauthn: ConfigAuthMethodWebauthnUpdateInput
}

input ConfigAuthMethodInsertInput {
    anonymous: ConfigAuthMethodAnonymousInsertInput
    emailPasswordless: ConfigAuthMethodEmailPasswordlessInsertInput
    otp: ConfigAuthMethodOtpInsertInput
    emailPassword: ConfigAuthMethodEmailPasswordInsertInput
    smsPasswordless: ConfigAuthMethodSmsPasswordlessInsertInput
    oauth: ConfigAuthMethodOauthInsertInput
    webauthn: ConfigAuthMethodWebauthnInsertInput
}

input ConfigAuthMethodComparisonExp {
    _and: [ConfigAuthMethodComparisonExp!]
    _not: ConfigAuthMethodComparisonExp
    _or: [ConfigAuthMethodComparisonExp!]
    anonymous: ConfigAuthMethodAnonymousComparisonExp
    emailPasswordless: ConfigAuthMethodEmailPasswordlessComparisonExp
    otp: ConfigAuthMethodOtpComparisonExp
    emailPassword: ConfigAuthMethodEmailPasswordComparisonExp
    smsPasswordless: ConfigAuthMethodSmsPasswordlessComparisonExp
    oauth: ConfigAuthMethodOauthComparisonExp
    webauthn: ConfigAuthMethodWebauthnComparisonExp
}

"""

"""
type ConfigAuthMethodAnonymous {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodAnonymousUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodAnonymousInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodAnonymousComparisonExp {
    _and: [ConfigAuthMethodAnonymousComparisonExp!]
    _not: ConfigAuthMethodAnonymousComparisonExp
    _or: [ConfigAuthMethodAnonymousComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodEmailPassword {
    """
    Disabling email+password sign in is not implmented yet
    enabled: bool | *true
    """
    hibpEnabled: Boolean
    """

    """
    emailVerificationRequired: Boolean
    """

    """
    passwordMinLength: ConfigUint8
}

input ConfigAuthMethodEmailPasswordUpdateInput {
    hibpEnabled: Boolean
    emailVerificationRequired: Boolean
    passwordMinLength: ConfigUint8
}

input ConfigAuthMethodEmailPasswordInsertInput {
    hibpEnabled: Boolean
    emailVerificationRequired: Boolean
    passwordMinLength: ConfigUint8
}

input ConfigAuthMethodEmailPasswordComparisonExp {
    _and: [ConfigAuthMethodEmailPasswordComparisonExp!]
    _not: ConfigAuthMethodEmailPasswordComparisonExp
    _or: [ConfigAuthMethodEmailPasswordComparisonExp!]
    hibpEnabled: ConfigBooleanComparisonExp
    emailVerificationRequired: ConfigBooleanComparisonExp
    passwordMinLength: ConfigUint8ComparisonExp
}

"""

"""
type ConfigAuthMethodEmailPasswordless {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodEmailPasswordlessUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodEmailPasswordlessInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodEmailPasswordlessComparisonExp {
    _and: [ConfigAuthMethodEmailPasswordlessComparisonExp!]
    _not: ConfigAuthMethodEmailPasswordlessComparisonExp
    _or: [ConfigAuthMethodEmailPasswordlessComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodOauth {
    """

    """
    apple: ConfigAuthMethodOauthApple
    """

    """
    azuread: ConfigAuthMethodOauthAzuread
    """

    """
    bitbucket: ConfigStandardOauthProvider
    """

    """
    discord: ConfigStandardOauthProviderWithScope
    """

    """
    entraid: ConfigAuthMethodOauthEntraid
    """

    """
    facebook: ConfigStandardOauthProviderWithScope
    """

    """
    github: ConfigStandardOauthProviderWithScope
    """

    """
    gitlab: ConfigStandardOauthProviderWithScope
    """

    """
    google: ConfigStandardOauthProviderWithScope
    """

    """
    linkedin: ConfigStandardOauthProviderWithScope
    """

    """
    spotify: ConfigStandardOauthProviderWithScope
    """

    """
    strava: ConfigStandardOauthProviderWithScope
    """

    """
    twitch: ConfigStandardOauthProviderWithScope
    """

    """
    twitter: ConfigAuthMethodOauthTwitter
    """

    """
    windowslive: ConfigStandardOauthProviderWithScope
    """

    """
    workos: ConfigAuthMethodOauthWorkos
}

input ConfigAuthMethodOauthUpdateInput {
    apple: ConfigAuthMethodOauthAppleUpdateInput
    azuread: ConfigAuthMethodOauthAzureadUpdateInput
    bitbucket: ConfigStandardOauthProviderUpdateInput
    discord: ConfigStandardOauthProviderWithScopeUpdateInput
    entraid: ConfigAuthMethodOauthEntraidUpdateInput
    facebook: ConfigStandardOauthProviderWithScopeUpdateInput
    github: ConfigStandardOauthProviderWithScopeUpdateInput
    gitlab: ConfigStandardOauthProviderWithScopeUpdateInput
    google: ConfigStandardOauthProviderWithScopeUpdateInput
    linkedin: ConfigStandardOauthProviderWithScopeUpdateInput
    spotify: ConfigStandardOauthProviderWithScopeUpdateInput
    strava: ConfigStandardOauthProviderWithScopeUpdateInput
    twitch: ConfigStandardOauthProviderWithScopeUpdateInput
    twitter: ConfigAuthMethodOauthTwitterUpdateInput
    windowslive: ConfigStandardOauthProviderWithScopeUpdateInput
    workos: ConfigAuthMethodOauthWorkosUpdateInput
}

input ConfigAuthMethodOauthInsertInput {
    apple: ConfigAuthMethodOauthAppleInsertInput
    azuread: ConfigAuthMethodOauthAzureadInsertInput
    bitbucket: ConfigStandardOauthProviderInsertInput
    discord: ConfigStandardOauthProviderWithScopeInsertInput
    entraid: ConfigAuthMethodOauthEntraidInsertInput
    facebook: ConfigStandardOauthProviderWithScopeInsertInput
    github: ConfigStandardOauthProviderWithScopeInsertInput
    gitlab: ConfigStandardOauthProviderWithScopeInsertInput
    google: ConfigStandardOauthProviderWithScopeInsertInput
    linkedin: ConfigStandardOauthProviderWithScopeInsertInput
    spotify: ConfigStandardOauthProviderWithScopeInsertInput
    strava: ConfigStandardOauthProviderWithScopeInsertInput
    twitch: ConfigStandardOauthProviderWithScopeInsertInput
    twitter: ConfigAuthMethodOauthTwitterInsertInput
    windowslive: ConfigStandardOauthProviderWithScopeInsertInput
    workos: ConfigAuthMethodOauthWorkosInsertInput
}

input ConfigAuthMethodOauthComparisonExp {
    _and: [ConfigAuthMethodOauthComparisonExp!]
    _not: ConfigAuthMethodOauthComparisonExp
    _or: [ConfigAuthMethodOauthComparisonExp!]
    apple: ConfigAuthMethodOauthAppleComparisonExp
    azuread: ConfigAuthMethodOauthAzureadComparisonExp
    bitbucket: ConfigStandardOauthProviderComparisonExp
    discord: ConfigStandardOauthProviderWithScopeComparisonExp
    entraid: ConfigAuthMethodOauthEntraidComparisonExp
    facebook: ConfigStandardOauthProviderWithScopeComparisonExp
    github: ConfigStandardOauthProviderWithScopeComparisonExp
    gitlab: ConfigStandardOauthProviderWithScopeComparisonExp
    google: ConfigStandardOauthProviderWithScopeComparisonExp
    linkedin: ConfigStandardOauthProviderWithScopeComparisonExp
    spotify: ConfigStandardOauthProviderWithScopeComparisonExp
    strava: ConfigStandardOauthProviderWithScopeComparisonExp
    twitch: ConfigStandardOauthProviderWithScopeComparisonExp
    twitter: ConfigAuthMethodOauthTwitterComparisonExp
    windowslive: ConfigStandardOauthProviderWithScopeComparisonExp
    workos: ConfigAuthMethodOauthWorkosComparisonExp
}

"""

"""
type ConfigAuthMethodOauthApple {
    """

    """
    enabled: Boolean
    """

    """
    audience: String
    """

    """
    clientId: String
    """

    """
    keyId: String
    """

    """
    teamId: String
    """

    """
    scope: [String!]
    """

    """
    privateKey: String
}

input ConfigAuthMethodOauthAppleUpdateInput {
    enabled: Boolean
    audience: String
    clientId: String
    keyId: String
    teamId: String
        scope: [String!]
    privateKey: String
}

input ConfigAuthMethodOauthAppleInsertInput {
    enabled: Boolean
    audience: String
    clientId: String
    keyId: String
    teamId: String
        scope: [String!]
    privateKey: String
}

input ConfigAuthMethodOauthAppleComparisonExp {
    _and: [ConfigAuthMethodOauthAppleComparisonExp!]
    _not: ConfigAuthMethodOauthAppleComparisonExp
    _or: [ConfigAuthMethodOauthAppleComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    audience: ConfigStringComparisonExp
    clientId: ConfigStringComparisonExp
    keyId: ConfigStringComparisonExp
    teamId: ConfigStringComparisonExp
    scope: ConfigStringComparisonExp
    privateKey: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthAzuread {
    """

    """
    tenant: String
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    clientSecret: String
}

input ConfigAuthMethodOauthAzureadUpdateInput {
    tenant: String
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigAuthMethodOauthAzureadInsertInput {
    tenant: String
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigAuthMethodOauthAzureadComparisonExp {
    _and: [ConfigAuthMethodOauthAzureadComparisonExp!]
    _not: ConfigAuthMethodOauthAzureadComparisonExp
    _or: [ConfigAuthMethodOauthAzureadComparisonExp!]
    tenant: ConfigStringComparisonExp
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthEntraid {
    """

    """
    tenant: String
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    clientSecret: String
}

input ConfigAuthMethodOauthEntraidUpdateInput {
    tenant: String
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigAuthMethodOauthEntraidInsertInput {
    tenant: String
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigAuthMethodOauthEntraidComparisonExp {
    _and: [ConfigAuthMethodOauthEntraidComparisonExp!]
    _not: ConfigAuthMethodOauthEntraidComparisonExp
    _or: [ConfigAuthMethodOauthEntraidComparisonExp!]
    tenant: ConfigStringComparisonExp
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthTwitter {
    """

    """
    enabled: Boolean
    """

    """
    consumerKey: String
    """

    """
    consumerSecret: String
}

input ConfigAuthMethodOauthTwitterUpdateInput {
    enabled: Boolean
    consumerKey: String
    consumerSecret: String
}

input ConfigAuthMethodOauthTwitterInsertInput {
    enabled: Boolean
    consumerKey: String
    consumerSecret: String
}

input ConfigAuthMethodOauthTwitterComparisonExp {
    _and: [ConfigAuthMethodOauthTwitterComparisonExp!]
    _not: ConfigAuthMethodOauthTwitterComparisonExp
    _or: [ConfigAuthMethodOauthTwitterComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    consumerKey: ConfigStringComparisonExp
    consumerSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOauthWorkos {
    """

    """
    connection: String
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    organization: String
    """

    """
    clientSecret: String
}

input ConfigAuthMethodOauthWorkosUpdateInput {
    connection: String
    enabled: Boolean
    clientId: String
    organization: String
    clientSecret: String
}

input ConfigAuthMethodOauthWorkosInsertInput {
    connection: String
    enabled: Boolean
    clientId: String
    organization: String
    clientSecret: String
}

input ConfigAuthMethodOauthWorkosComparisonExp {
    _and: [ConfigAuthMethodOauthWorkosComparisonExp!]
    _not: ConfigAuthMethodOauthWorkosComparisonExp
    _or: [ConfigAuthMethodOauthWorkosComparisonExp!]
    connection: ConfigStringComparisonExp
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    organization: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthMethodOtp {
    """

    """
    email: ConfigAuthMethodOtpEmail
}

input ConfigAuthMethodOtpUpdateInput {
    email: ConfigAuthMethodOtpEmailUpdateInput
}

input ConfigAuthMethodOtpInsertInput {
    email: ConfigAuthMethodOtpEmailInsertInput
}

input ConfigAuthMethodOtpComparisonExp {
    _and: [ConfigAuthMethodOtpComparisonExp!]
    _not: ConfigAuthMethodOtpComparisonExp
    _or: [ConfigAuthMethodOtpComparisonExp!]
    email: ConfigAuthMethodOtpEmailComparisonExp
}

"""

"""
type ConfigAuthMethodOtpEmail {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodOtpEmailUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodOtpEmailInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodOtpEmailComparisonExp {
    _and: [ConfigAuthMethodOtpEmailComparisonExp!]
    _not: ConfigAuthMethodOtpEmailComparisonExp
    _or: [ConfigAuthMethodOtpEmailComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodSmsPasswordless {
    """

    """
    enabled: Boolean
}

input ConfigAuthMethodSmsPasswordlessUpdateInput {
    enabled: Boolean
}

input ConfigAuthMethodSmsPasswordlessInsertInput {
    enabled: Boolean
}

input ConfigAuthMethodSmsPasswordlessComparisonExp {
    _and: [ConfigAuthMethodSmsPasswordlessComparisonExp!]
    _not: ConfigAuthMethodSmsPasswordlessComparisonExp
    _or: [ConfigAuthMethodSmsPasswordlessComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthMethodWebauthn {
    """

    """
    enabled: Boolean
    """

    """
    relyingParty: ConfigAuthMethodWebauthnRelyingParty
    """

    """
    attestation: ConfigAuthMethodWebauthnAttestation
}

input ConfigAuthMethodWebauthnUpdateInput {
    enabled: Boolean
    relyingParty: ConfigAuthMethodWebauthnRelyingPartyUpdateInput
    attestation: ConfigAuthMethodWebauthnAttestationUpdateInput
}

input ConfigAuthMethodWebauthnInsertInput {
    enabled: Boolean
    relyingParty: ConfigAuthMethodWebauthnRelyingPartyInsertInput
    attestation: ConfigAuthMethodWebauthnAttestationInsertInput
}

input ConfigAuthMethodWebauthnComparisonExp {
    _and: [ConfigAuthMethodWebauthnComparisonExp!]
    _not: ConfigAuthMethodWebauthnComparisonExp
    _or: [ConfigAuthMethodWebauthnComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    relyingParty: ConfigAuthMethodWebauthnRelyingPartyComparisonExp
    attestation: ConfigAuthMethodWebauthnAttestationComparisonExp
}

"""

"""
type ConfigAuthMethodWebauthnAttestation {
    """

    """
    timeout: ConfigUint32
}

input ConfigAuthMethodWebauthnAttestationUpdateInput {
    timeout: ConfigUint32
}

input ConfigAuthMethodWebauthnAttestationInsertInput {
    timeout: ConfigUint32
}

input ConfigAuthMethodWebauthnAttestationComparisonExp {
    _and: [ConfigAuthMethodWebauthnAttestationComparisonExp!]
    _not: ConfigAuthMethodWebauthnAttestationComparisonExp
    _or: [ConfigAuthMethodWebauthnAttestationComparisonExp!]
    timeout: ConfigUint32ComparisonExp
}

"""

"""
type ConfigAuthMethodWebauthnRelyingParty {
    """

    """
    id: String
    """

    """
    name: String
    """

    """
    origins: [ConfigUrl!]
}

input ConfigAuthMethodWebauthnRelyingPartyUpdateInput {
    id: String
    name: String
        origins: [ConfigUrl!]
}

input ConfigAuthMethodWebauthnRelyingPartyInsertInput {
    id: String
    name: String
        origins: [ConfigUrl!]
}

input ConfigAuthMethodWebauthnRelyingPartyComparisonExp {
    _and: [ConfigAuthMethodWebauthnRelyingPartyComparisonExp!]
    _not: ConfigAuthMethodWebauthnRelyingPartyComparisonExp
    _or: [ConfigAuthMethodWebauthnRelyingPartyComparisonExp!]
    id: ConfigStringComparisonExp
    name: ConfigStringComparisonExp
    origins: ConfigUrlComparisonExp
}

"""

"""
type ConfigAuthMisc {
    """

    """
    concealErrors: Boolean
}

input ConfigAuthMiscUpdateInput {
    concealErrors: Boolean
}

input ConfigAuthMiscInsertInput {
    concealErrors: Boolean
}

input ConfigAuthMiscComparisonExp {
    _and: [ConfigAuthMiscComparisonExp!]
    _not: ConfigAuthMiscComparisonExp
    _or: [ConfigAuthMiscComparisonExp!]
    concealErrors: ConfigBooleanComparisonExp
}

"""

"""
type ConfigAuthRateLimit {
    """

    """
    emails: ConfigRateLimit
    """

    """
    sms: ConfigRateLimit
    """

    """
    bruteForce: ConfigRateLimit
    """

    """
    signups: ConfigRateLimit
    """

    """
    global: ConfigRateLimit
}

input ConfigAuthRateLimitUpdateInput {
    emails: ConfigRateLimitUpdateInput
    sms: ConfigRateLimitUpdateInput
    bruteForce: ConfigRateLimitUpdateInput
    signups: ConfigRateLimitUpdateInput
    global: ConfigRateLimitUpdateInput
}

input ConfigAuthRateLimitInsertInput {
    emails: ConfigRateLimitInsertInput
    sms: ConfigRateLimitInsertInput
    bruteForce: ConfigRateLimitInsertInput
    signups: ConfigRateLimitInsertInput
    global: ConfigRateLimitInsertInput
}

input ConfigAuthRateLimitComparisonExp {
    _and: [ConfigAuthRateLimitComparisonExp!]
    _not: ConfigAuthRateLimitComparisonExp
    _or: [ConfigAuthRateLimitComparisonExp!]
    emails: ConfigRateLimitComparisonExp
    sms: ConfigRateLimitComparisonExp
    bruteForce: ConfigRateLimitComparisonExp
    signups: ConfigRateLimitComparisonExp
    global: ConfigRateLimitComparisonExp
}

"""

"""
type ConfigAuthRedirections {
    """
    AUTH_CLIENT_URL
    """
    clientUrl: ConfigUrl
    """
    AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS
    """
    allowedUrls: [String!]
}

input ConfigAuthRedirectionsUpdateInput {
    clientUrl: ConfigUrl
        allowedUrls: [String!]
}

input ConfigAuthRedirectionsInsertInput {
    clientUrl: ConfigUrl
        allowedUrls: [String!]
}

input ConfigAuthRedirectionsComparisonExp {
    _and: [ConfigAuthRedirectionsComparisonExp!]
    _not: ConfigAuthRedirectionsComparisonExp
    _or: [ConfigAuthRedirectionsComparisonExp!]
    clientUrl: ConfigUrlComparisonExp
    allowedUrls: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthSession {
    """

    """
    accessToken: ConfigAuthSessionAccessToken
    """

    """
    refreshToken: ConfigAuthSessionRefreshToken
}

input ConfigAuthSessionUpdateInput {
    accessToken: ConfigAuthSessionAccessTokenUpdateInput
    refreshToken: ConfigAuthSessionRefreshTokenUpdateInput
}

input ConfigAuthSessionInsertInput {
    accessToken: ConfigAuthSessionAccessTokenInsertInput
    refreshToken: ConfigAuthSessionRefreshTokenInsertInput
}

input ConfigAuthSessionComparisonExp {
    _and: [ConfigAuthSessionComparisonExp!]
    _not: ConfigAuthSessionComparisonExp
    _or: [ConfigAuthSessionComparisonExp!]
    accessToken: ConfigAuthSessionAccessTokenComparisonExp
    refreshToken: ConfigAuthSessionRefreshTokenComparisonExp
}

"""

"""
type ConfigAuthSessionAccessToken {
    """
    AUTH_ACCESS_TOKEN_EXPIRES_IN
    """
    expiresIn: ConfigUint32
    """
    AUTH_JWT_CUSTOM_CLAIMS
    """
    customClaims: [ConfigAuthsessionaccessTokenCustomClaims!]
}

input ConfigAuthSessionAccessTokenUpdateInput {
    expiresIn: ConfigUint32
        customClaims: [ConfigAuthsessionaccessTokenCustomClaimsUpdateInput!]
}

input ConfigAuthSessionAccessTokenInsertInput {
    expiresIn: ConfigUint32
        customClaims: [ConfigAuthsessionaccessTokenCustomClaimsInsertInput!]
}

input ConfigAuthSessionAccessTokenComparisonExp {
    _and: [ConfigAuthSessionAccessTokenComparisonExp!]
    _not: ConfigAuthSessionAccessTokenComparisonExp
    _or: [ConfigAuthSessionAccessTokenComparisonExp!]
    expiresIn: ConfigUint32ComparisonExp
    customClaims: ConfigAuthsessionaccessTokenCustomClaimsComparisonExp
}

"""

"""
type ConfigAuthSessionRefreshToken {
    """
    AUTH_REFRESH_TOKEN_EXPIRES_IN
    """
    expiresIn: ConfigUint32
}

input ConfigAuthSessionRefreshTokenUpdateInput {
    expiresIn: ConfigUint32
}

input ConfigAuthSessionRefreshTokenInsertInput {
    expiresIn: ConfigUint32
}

input ConfigAuthSessionRefreshTokenComparisonExp {
    _and: [ConfigAuthSessionRefreshTokenComparisonExp!]
    _not: ConfigAuthSessionRefreshTokenComparisonExp
    _or: [ConfigAuthSessionRefreshTokenComparisonExp!]
    expiresIn: ConfigUint32ComparisonExp
}

"""

"""
type ConfigAuthSignUp {
    """
    Inverse of AUTH_DISABLE_SIGNUP
    """
    enabled: Boolean
    """
    AUTH_DISABLE_NEW_USERS
    """
    disableNewUsers: Boolean
    """

    """
    turnstile: ConfigAuthSignUpTurnstile
}

input ConfigAuthSignUpUpdateInput {
    enabled: Boolean
    disableNewUsers: Boolean
    turnstile: ConfigAuthSignUpTurnstileUpdateInput
}

input ConfigAuthSignUpInsertInput {
    enabled: Boolean
    disableNewUsers: Boolean
    turnstile: ConfigAuthSignUpTurnstileInsertInput
}

input ConfigAuthSignUpComparisonExp {
    _and: [ConfigAuthSignUpComparisonExp!]
    _not: ConfigAuthSignUpComparisonExp
    _or: [ConfigAuthSignUpComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    disableNewUsers: ConfigBooleanComparisonExp
    turnstile: ConfigAuthSignUpTurnstileComparisonExp
}

"""

"""
type ConfigAuthSignUpTurnstile {
    """

    """
    secretKey: String!
}

input ConfigAuthSignUpTurnstileUpdateInput {
    secretKey: String
}

input ConfigAuthSignUpTurnstileInsertInput {
    secretKey: String!
}

input ConfigAuthSignUpTurnstileComparisonExp {
    _and: [ConfigAuthSignUpTurnstileComparisonExp!]
    _not: ConfigAuthSignUpTurnstileComparisonExp
    _or: [ConfigAuthSignUpTurnstileComparisonExp!]
    secretKey: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthTotp {
    """

    """
    enabled: Boolean
    """

    """
    issuer: String
}

input ConfigAuthTotpUpdateInput {
    enabled: Boolean
    issuer: String
}

input ConfigAuthTotpInsertInput {
    enabled: Boolean
    issuer: String
}

input ConfigAuthTotpComparisonExp {
    _and: [ConfigAuthTotpComparisonExp!]
    _not: ConfigAuthTotpComparisonExp
    _or: [ConfigAuthTotpComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    issuer: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthUser {
    """

    """
    roles: ConfigAuthUserRoles
    """

    """
    locale: ConfigAuthUserLocale
    """

    """
    gravatar: ConfigAuthUserGravatar
    """

    """
    email: ConfigAuthUserEmail
    """

    """
    emailDomains: ConfigAuthUserEmailDomains
}

input ConfigAuthUserUpdateInput {
    roles: ConfigAuthUserRolesUpdateInput
    locale: ConfigAuthUserLocaleUpdateInput
    gravatar: ConfigAuthUserGravatarUpdateInput
    email: ConfigAuthUserEmailUpdateInput
    emailDomains: ConfigAuthUserEmailDomainsUpdateInput
}

input ConfigAuthUserInsertInput {
    roles: ConfigAuthUserRolesInsertInput
    locale: ConfigAuthUserLocaleInsertInput
    gravatar: ConfigAuthUserGravatarInsertInput
    email: ConfigAuthUserEmailInsertInput
    emailDomains: ConfigAuthUserEmailDomainsInsertInput
}

input ConfigAuthUserComparisonExp {
    _and: [ConfigAuthUserComparisonExp!]
    _not: ConfigAuthUserComparisonExp
    _or: [ConfigAuthUserComparisonExp!]
    roles: ConfigAuthUserRolesComparisonExp
    locale: ConfigAuthUserLocaleComparisonExp
    gravatar: ConfigAuthUserGravatarComparisonExp
    email: ConfigAuthUserEmailComparisonExp
    emailDomains: ConfigAuthUserEmailDomainsComparisonExp
}

"""

"""
type ConfigAuthUserEmail {
    """
    AUTH_ACCESS_CONTROL_ALLOWED_EMAILS
    """
    allowed: [ConfigEmail!]
    """
    AUTH_ACCESS_CONTROL_BLOCKED_EMAILS
    """
    blocked: [ConfigEmail!]
}

input ConfigAuthUserEmailUpdateInput {
        allowed: [ConfigEmail!]
        blocked: [ConfigEmail!]
}

input ConfigAuthUserEmailInsertInput {
        allowed: [ConfigEmail!]
        blocked: [ConfigEmail!]
}

input ConfigAuthUserEmailComparisonExp {
    _and: [ConfigAuthUserEmailComparisonExp!]
    _not: ConfigAuthUserEmailComparisonExp
    _or: [ConfigAuthUserEmailComparisonExp!]
    allowed: ConfigEmailComparisonExp
    blocked: ConfigEmailComparisonExp
}

"""

"""
type ConfigAuthUserEmailDomains {
    """
    AUTH_ACCESS_CONTROL_ALLOWED_EMAIL_DOMAINS
    """
    allowed: [String!]
    """
    AUTH_ACCESS_CONTROL_BLOCKED_EMAIL_DOMAINS
    """
    blocked: [String!]
}

input ConfigAuthUserEmailDomainsUpdateInput {
        allowed: [String!]
        blocked: [String!]
}

input ConfigAuthUserEmailDomainsInsertInput {
        allowed: [String!]
        blocked: [String!]
}

input ConfigAuthUserEmailDomainsComparisonExp {
    _and: [ConfigAuthUserEmailDomainsComparisonExp!]
    _not: ConfigAuthUserEmailDomainsComparisonExp
    _or: [ConfigAuthUserEmailDomainsComparisonExp!]
    allowed: ConfigStringComparisonExp
    blocked: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthUserGravatar {
    """
    AUTH_GRAVATAR_ENABLED
    """
    enabled: Boolean
    """

    """
    default: String
    """

    """
    rating: String
}

input ConfigAuthUserGravatarUpdateInput {
    enabled: Boolean
    default: String
    rating: String
}

input ConfigAuthUserGravatarInsertInput {
    enabled: Boolean
    default: String
    rating: String
}

input ConfigAuthUserGravatarComparisonExp {
    _and: [ConfigAuthUserGravatarComparisonExp!]
    _not: ConfigAuthUserGravatarComparisonExp
    _or: [ConfigAuthUserGravatarComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    default: ConfigStringComparisonExp
    rating: ConfigStringComparisonExp
}

"""

"""
type ConfigAuthUserLocale {
    """
    AUTH_LOCALE_DEFAULT
    """
    default: ConfigLocale
    """
    AUTH_LOCALE_ALLOWED_LOCALES
    """
    allowed: [ConfigLocale!]
}

input ConfigAuthUserLocaleUpdateInput {
    default: ConfigLocale
        allowed: [ConfigLocale!]
}

input ConfigAuthUserLocaleInsertInput {
    default: ConfigLocale
        allowed: [ConfigLocale!]
}

input ConfigAuthUserLocaleComparisonExp {
    _and: [ConfigAuthUserLocaleComparisonExp!]
    _not: ConfigAuthUserLocaleComparisonExp
    _or: [ConfigAuthUserLocaleComparisonExp!]
    default: ConfigLocaleComparisonExp
    allowed: ConfigLocaleComparisonExp
}

"""

"""
type ConfigAuthUserRoles {
    """
    AUTH_USER_DEFAULT_ROLE
    """
    default: ConfigUserRole
    """
    AUTH_USER_DEFAULT_ALLOWED_ROLES
    """
    allowed: [ConfigUserRole!]
}

input ConfigAuthUserRolesUpdateInput {
    default: ConfigUserRole
        allowed: [ConfigUserRole!]
}

input ConfigAuthUserRolesInsertInput {
    default: ConfigUserRole
        allowed: [ConfigUserRole!]
}

input ConfigAuthUserRolesComparisonExp {
    _and: [ConfigAuthUserRolesComparisonExp!]
    _not: ConfigAuthUserRolesComparisonExp
    _or: [ConfigAuthUserRolesComparisonExp!]
    default: ConfigUserRoleComparisonExp
    allowed: ConfigUserRoleComparisonExp
}

"""
AUTH_JWT_CUSTOM_CLAIMS
"""
type ConfigAuthsessionaccessTokenCustomClaims {
    """

    """
    key: String!
    """

    """
    value: String!
    """

    """
    default: String
}

input ConfigAuthsessionaccessTokenCustomClaimsUpdateInput {
    key: String
    value: String
    default: String
}

input ConfigAuthsessionaccessTokenCustomClaimsInsertInput {
    key: String!
    value: String!
    default: String
}

input ConfigAuthsessionaccessTokenCustomClaimsComparisonExp {
    _and: [ConfigAuthsessionaccessTokenCustomClaimsComparisonExp!]
    _not: ConfigAuthsessionaccessTokenCustomClaimsComparisonExp
    _or: [ConfigAuthsessionaccessTokenCustomClaimsComparisonExp!]
    key: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
    default: ConfigStringComparisonExp
}

"""

"""
type ConfigAutoscaler {
    """

    """
    maxReplicas: ConfigUint8!
}

input ConfigAutoscalerUpdateInput {
    maxReplicas: ConfigUint8
}

input ConfigAutoscalerInsertInput {
    maxReplicas: ConfigUint8!
}

input ConfigAutoscalerComparisonExp {
    _and: [ConfigAutoscalerComparisonExp!]
    _not: ConfigAutoscalerComparisonExp
    _or: [ConfigAutoscalerComparisonExp!]
    maxReplicas: ConfigUint8ComparisonExp
}

"""

"""
type ConfigClaimMap {
    """

    """
    claim: String!
    """

    """
    value: String
    """

    """
    path: String
    """

    """
    default: String
}

input ConfigClaimMapUpdateInput {
    claim: String
    value: String
    path: String
    default: String
}

input ConfigClaimMapInsertInput {
    claim: String!
    value: String
    path: String
    default: String
}

input ConfigClaimMapComparisonExp {
    _and: [ConfigClaimMapComparisonExp!]
    _not: ConfigClaimMapComparisonExp
    _or: [ConfigClaimMapComparisonExp!]
    claim: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
    path: ConfigStringComparisonExp
    default: ConfigStringComparisonExp
}

"""
Resource configuration for a service
"""
type ConfigComputeResources {
    """
    milicpus, 1000 milicpus = 1 cpu
    """
    cpu: ConfigUint32!
    """
    MiB: 128MiB to 30GiB
    """
    memory: ConfigUint32!
}

input ConfigComputeResourcesUpdateInput {
    cpu: ConfigUint32
    memory: ConfigUint32
}

input ConfigComputeResourcesInsertInput {
    cpu: ConfigUint32!
    memory: ConfigUint32!
}

input ConfigComputeResourcesComparisonExp {
    _and: [ConfigComputeResourcesComparisonExp!]
    _not: ConfigComputeResourcesComparisonExp
    _or: [ConfigComputeResourcesComparisonExp!]
    cpu: ConfigUint32ComparisonExp
    memory: ConfigUint32ComparisonExp
}

"""
main entrypoint to the configuration
"""
type ConfigConfig {
    """
    Global configuration that applies to all services
    """
    global: ConfigGlobal
    """
    Configuration for hasura
    """
    hasura: ConfigHasura!
    """
    Advanced configuration for GraphQL
    """
    graphql: ConfigGraphql
    """
    Configuration for functions service
    """
    functions: ConfigFunctions
    """
    Configuration for auth service
    """
    auth: ConfigAuth
    """
    Configuration for postgres service
    """
    postgres: ConfigPostgres!
    """
    Configuration for third party providers like SMTP, SMS, etc.
    """
    provider: ConfigProvider
    """
    Configuration for storage service
    """
    storage: ConfigStorage
    """
    Configuration for graphite service
    """
    ai: ConfigAI
    """
    Configuration for observability service
    """
    observability: ConfigObservability!
}

input ConfigConfigUpdateInput {
    global: ConfigGlobalUpdateInput
    hasura: ConfigHasuraUpdateInput
    graphql: ConfigGraphqlUpdateInput
    functions: ConfigFunctionsUpdateInput
    auth: ConfigAuthUpdateInput
    postgres: ConfigPostgresUpdateInput
    provider: ConfigProviderUpdateInput
    storage: ConfigStorageUpdateInput
    ai: ConfigAIUpdateInput
    observability: ConfigObservabilityUpdateInput
}

input ConfigConfigInsertInput {
    global: ConfigGlobalInsertInput
    hasura: ConfigHasuraInsertInput!
    graphql: ConfigGraphqlInsertInput
    functions: ConfigFunctionsInsertInput
    auth: ConfigAuthInsertInput
    postgres: ConfigPostgresInsertInput!
    provider: ConfigProviderInsertInput
    storage: ConfigStorageInsertInput
    ai: ConfigAIInsertInput
    observability: ConfigObservabilityInsertInput!
}

input ConfigConfigComparisonExp {
    _and: [ConfigConfigComparisonExp!]
    _not: ConfigConfigComparisonExp
    _or: [ConfigConfigComparisonExp!]
    global: ConfigGlobalComparisonExp
    hasura: ConfigHasuraComparisonExp
    graphql: ConfigGraphqlComparisonExp
    functions: ConfigFunctionsComparisonExp
    auth: ConfigAuthComparisonExp
    postgres: ConfigPostgresComparisonExp
    provider: ConfigProviderComparisonExp
    storage: ConfigStorageComparisonExp
    ai: ConfigAIComparisonExp
    observability: ConfigObservabilityComparisonExp
}

scalar ConfigEmail

input ConfigEmailComparisonExp {
    _eq: ConfigEmail
    _neq: ConfigEmail
    _in: [ConfigEmail!]
    _nin: [ConfigEmail!]
}

"""

"""
type ConfigEnvironmentVariable {
    """

    """
    name: String!
    """
    Value of the environment variable
    """
    value: String!
}

input ConfigEnvironmentVariableUpdateInput {
    name: String
    value: String
}

input ConfigEnvironmentVariableInsertInput {
    name: String!
    value: String!
}

input ConfigEnvironmentVariableComparisonExp {
    _and: [ConfigEnvironmentVariableComparisonExp!]
    _not: ConfigEnvironmentVariableComparisonExp
    _or: [ConfigEnvironmentVariableComparisonExp!]
    name: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
}

"""
Configuration for functions service
"""
type ConfigFunctions {
    """

    """
    node: ConfigFunctionsNode
    """

    """
    resources: ConfigFunctionsResources
    """

    """
    rateLimit: ConfigRateLimit
}

input ConfigFunctionsUpdateInput {
    node: ConfigFunctionsNodeUpdateInput
    resources: ConfigFunctionsResourcesUpdateInput
    rateLimit: ConfigRateLimitUpdateInput
}

input ConfigFunctionsInsertInput {
    node: ConfigFunctionsNodeInsertInput
    resources: ConfigFunctionsResourcesInsertInput
    rateLimit: ConfigRateLimitInsertInput
}

input ConfigFunctionsComparisonExp {
    _and: [ConfigFunctionsComparisonExp!]
    _not: ConfigFunctionsComparisonExp
    _or: [ConfigFunctionsComparisonExp!]
    node: ConfigFunctionsNodeComparisonExp
    resources: ConfigFunctionsResourcesComparisonExp
    rateLimit: ConfigRateLimitComparisonExp
}

"""

"""
type ConfigFunctionsNode {
    """

    """
    version: Int
}

input ConfigFunctionsNodeUpdateInput {
    version: Int
}

input ConfigFunctionsNodeInsertInput {
    version: Int
}

input ConfigFunctionsNodeComparisonExp {
    _and: [ConfigFunctionsNodeComparisonExp!]
    _not: ConfigFunctionsNodeComparisonExp
    _or: [ConfigFunctionsNodeComparisonExp!]
    version: ConfigIntComparisonExp
}

"""

"""
type ConfigFunctionsResources {
    """

    """
    networking: ConfigNetworking
}

input ConfigFunctionsResourcesUpdateInput {
    networking: ConfigNetworkingUpdateInput
}

input ConfigFunctionsResourcesInsertInput {
    networking: ConfigNetworkingInsertInput
}

input ConfigFunctionsResourcesComparisonExp {
    _and: [ConfigFunctionsResourcesComparisonExp!]
    _not: ConfigFunctionsResourcesComparisonExp
    _or: [ConfigFunctionsResourcesComparisonExp!]
    networking: ConfigNetworkingComparisonExp
}

"""
Global configuration that applies to all services
"""
type ConfigGlobal {
    """
    User-defined environment variables that are spread over all services
    """
    environment: [ConfigGlobalEnvironmentVariable!]
}

input ConfigGlobalUpdateInput {
        environment: [ConfigGlobalEnvironmentVariableUpdateInput!]
}

input ConfigGlobalInsertInput {
        environment: [ConfigGlobalEnvironmentVariableInsertInput!]
}

input ConfigGlobalComparisonExp {
    _and: [ConfigGlobalComparisonExp!]
    _not: ConfigGlobalComparisonExp
    _or: [ConfigGlobalComparisonExp!]
    environment: ConfigGlobalEnvironmentVariableComparisonExp
}

"""

"""
type ConfigGlobalEnvironmentVariable {
    """

    """
    name: String!
    """
    Value of the environment variable
    """
    value: String!
}

input ConfigGlobalEnvironmentVariableUpdateInput {
    name: String
    value: String
}

input ConfigGlobalEnvironmentVariableInsertInput {
    name: String!
    value: String!
}

input ConfigGlobalEnvironmentVariableComparisonExp {
    _and: [ConfigGlobalEnvironmentVariableComparisonExp!]
    _not: ConfigGlobalEnvironmentVariableComparisonExp
    _or: [ConfigGlobalEnvironmentVariableComparisonExp!]
    name: ConfigStringComparisonExp
    value: ConfigStringComparisonExp
}

"""

"""
type ConfigGrafana {
    """

    """
    adminPassword: String!
    """

    """
    smtp: ConfigGrafanaSmtp
    """

    """
    alerting: ConfigGrafanaAlerting
    """

    """
    contacts: ConfigGrafanaContacts
}

input ConfigGrafanaUpdateInput {
    adminPassword: String
    smtp: ConfigGrafanaSmtpUpdateInput
    alerting: ConfigGrafanaAlertingUpdateInput
    contacts: ConfigGrafanaContactsUpdateInput
}

input ConfigGrafanaInsertInput {
    adminPassword: String!
    smtp: ConfigGrafanaSmtpInsertInput
    alerting: ConfigGrafanaAlertingInsertInput
    contacts: ConfigGrafanaContactsInsertInput
}

input ConfigGrafanaComparisonExp {
    _and: [ConfigGrafanaComparisonExp!]
    _not: ConfigGrafanaComparisonExp
    _or: [ConfigGrafanaComparisonExp!]
    adminPassword: ConfigStringComparisonExp
    smtp: ConfigGrafanaSmtpComparisonExp
    alerting: ConfigGrafanaAlertingComparisonExp
    contacts: ConfigGrafanaContactsComparisonExp
}

"""

"""
type ConfigGrafanaAlerting {
    """

    """
    enabled: Boolean
}

input ConfigGrafanaAlertingUpdateInput {
    enabled: Boolean
}

input ConfigGrafanaAlertingInsertInput {
    enabled: Boolean
}

input ConfigGrafanaAlertingComparisonExp {
    _and: [ConfigGrafanaAlertingComparisonExp!]
    _not: ConfigGrafanaAlertingComparisonExp
    _or: [ConfigGrafanaAlertingComparisonExp!]
    enabled: ConfigBooleanComparisonExp
}

"""

"""
type ConfigGrafanaContacts {
    """

    """
    emails: [String!]
    """

    """
    pagerduty: [ConfigGrafanacontactsPagerduty!]
    """

    """
    discord: [ConfigGrafanacontactsDiscord!]
    """

    """
    slack: [ConfigGrafanacontactsSlack!]
    """

    """
    webhook: [ConfigGrafanacontactsWebhook!]
}

input ConfigGrafanaContactsUpdateInput {
        emails: [String!]
        pagerduty: [ConfigGrafanacontactsPagerdutyUpdateInput!]
        discord: [ConfigGrafanacontactsDiscordUpdateInput!]
        slack: [ConfigGrafanacontactsSlackUpdateInput!]
        webhook: [ConfigGrafanacontactsWebhookUpdateInput!]
}

input ConfigGrafanaContactsInsertInput {
        emails: [String!]
        pagerduty: [ConfigGrafanacontactsPagerdutyInsertInput!]
        discord: [ConfigGrafanacontactsDiscordInsertInput!]
        slack: [ConfigGrafanacontactsSlackInsertInput!]
        webhook: [ConfigGrafanacontactsWebhookInsertInput!]
}

input ConfigGrafanaContactsComparisonExp {
    _and: [ConfigGrafanaContactsComparisonExp!]
    _not: ConfigGrafanaContactsComparisonExp
    _or: [ConfigGrafanaContactsComparisonExp!]
    emails: ConfigStringComparisonExp
    pagerduty: ConfigGrafanacontactsPagerdutyComparisonExp
    discord: ConfigGrafanacontactsDiscordComparisonExp
    slack: ConfigGrafanacontactsSlackComparisonExp
    webhook: ConfigGrafanacontactsWebhookComparisonExp
}

"""

"""
type ConfigGrafanaSmtp {
    """

    """
    host: String!
    """

    """
    port: ConfigPort!
    """

    """
    sender: String!
    """

    """
    user: String!
    """

    """
    password: String!
}

input ConfigGrafanaSmtpUpdateInput {
    host: String
    port: ConfigPort
    sender: String
    user: String
    password: String
}

input ConfigGrafanaSmtpInsertInput {
    host: String!
    port: ConfigPort!
    sender: String!
    user: String!
    password: String!
}

input ConfigGrafanaSmtpComparisonExp {
    _and: [ConfigGrafanaSmtpComparisonExp!]
    _not: ConfigGrafanaSmtpComparisonExp
    _or: [ConfigGrafanaSmtpComparisonExp!]
    host: ConfigStringComparisonExp
    port: ConfigPortComparisonExp
    sender: ConfigStringComparisonExp
    user: ConfigStringComparisonExp
    password: ConfigStringComparisonExp
}

"""

"""
type ConfigGrafanacontactsDiscord {
    """

    """
    url: String!
    """

    """
    avatarUrl: String!
}

input ConfigGrafanacontactsDiscordUpdateInput {
    url: String
    avatarUrl: String
}

input ConfigGrafanacontactsDiscordInsertInput {
    url: String!
    avatarUrl: String!
}

input ConfigGrafanacontactsDiscordComparisonExp {
    _and: [ConfigGrafanacontactsDiscordComparisonExp!]
    _not: ConfigGrafanacontactsDiscordComparisonExp
    _or: [ConfigGrafanacontactsDiscordComparisonExp!]
    url: ConfigStringComparisonExp
    avatarUrl: ConfigStringComparisonExp
}

"""

"""
type ConfigGrafanacontactsPagerduty {
    """

    """
    integrationKey: String!
    """

    """
    severity: String!
    """

    """
    class: String!
    """

    """
    component: String!
    """

    """
    group: String!
}

input ConfigGrafanacontactsPagerdutyUpdateInput {
    integrationKey: String
    severity: String
    class: String
    component: String
    group: String
}

input ConfigGrafanacontactsPagerdutyInsertInput {
    integrationKey: String!
    severity: String!
    class: String!
    component: String!
    group: String!
}

input ConfigGrafanacontactsPagerdutyComparisonExp {
    _and: [ConfigGrafanacontactsPagerdutyComparisonExp!]
    _not: ConfigGrafanacontactsPagerdutyComparisonExp
    _or: [ConfigGrafanacontactsPagerdutyComparisonExp!]
    integrationKey: ConfigStringComparisonExp
    severity: ConfigStringComparisonExp
    class: ConfigStringComparisonExp
    component: ConfigStringComparisonExp
    group: ConfigStringComparisonExp
}

"""

"""
type ConfigGrafanacontactsSlack {
    """

    """
    recipient: String!
    """

    """
    token: String!
    """

    """
    username: String!
    """

    """
    iconEmoji: String!
    """

    """
    iconURL: String!
    """

    """
    mentionUsers: [String!]!
    """

    """
    mentionGroups: [String!]!
    """

    """
    mentionChannel: String!
    """

    """
    url: String!
    """

    """
    endpointURL: String!
}

input ConfigGrafanacontactsSlackUpdateInput {
    recipient: String
    token: String
    username: String
    iconEmoji: String
    iconURL: String
        mentionUsers: [String!]
        mentionGroups: [String!]
    mentionChannel: String
    url: String
    endpointURL: String
}

input ConfigGrafanacontactsSlackInsertInput {
    recipient: String!
    token: String!
    username: String!
    iconEmoji: String!
    iconURL: String!
        mentionUsers: [String!]!
        mentionGroups: [String!]!
    mentionChannel: String!
    url: String!
    endpointURL: String!
}

input ConfigGrafanacontactsSlackComparisonExp {
    _and: [ConfigGrafanacontactsSlackComparisonExp!]
    _not: ConfigGrafanacontactsSlackComparisonExp
    _or: [ConfigGrafanacontactsSlackComparisonExp!]
    recipient: ConfigStringComparisonExp
    token: ConfigStringComparisonExp
    username: ConfigStringComparisonExp
    iconEmoji: ConfigStringComparisonExp
    iconURL: ConfigStringComparisonExp
    mentionUsers: ConfigStringComparisonExp
    mentionGroups: ConfigStringComparisonExp
    mentionChannel: ConfigStringComparisonExp
    url: ConfigStringComparisonExp
    endpointURL: ConfigStringComparisonExp
}

"""

"""
type ConfigGrafanacontactsWebhook {
    """

    """
    url: String!
    """

    """
    httpMethod: String!
    """

    """
    username: String!
    """

    """
    password: String!
    """

    """
    authorizationScheme: String!
    """

    """
    authorizationCredentials: String!
    """

    """
    maxAlerts: Int!
}

input ConfigGrafanacontactsWebhookUpdateInput {
    url: String
    httpMethod: String
    username: String
    password: String
    authorizationScheme: String
    authorizationCredentials: String
    maxAlerts: Int
}

input ConfigGrafanacontactsWebhookInsertInput {
    url: String!
    httpMethod: String!
    username: String!
    password: String!
    authorizationScheme: String!
    authorizationCredentials: String!
    maxAlerts: Int!
}

input ConfigGrafanacontactsWebhookComparisonExp {
    _and: [ConfigGrafanacontactsWebhookComparisonExp!]
    _not: ConfigGrafanacontactsWebhookComparisonExp
    _or: [ConfigGrafanacontactsWebhookComparisonExp!]
    url: ConfigStringComparisonExp
    httpMethod: ConfigStringComparisonExp
    username: ConfigStringComparisonExp
    password: ConfigStringComparisonExp
    authorizationScheme: ConfigStringComparisonExp
    authorizationCredentials: ConfigStringComparisonExp
    maxAlerts: ConfigIntComparisonExp
}

"""

"""
type ConfigGraphql {
    """

    """
    security: ConfigGraphqlSecurity
}

input ConfigGraphqlUpdateInput {
    security: ConfigGraphqlSecurityUpdateInput
}

input ConfigGraphqlInsertInput {
    security: ConfigGraphqlSecurityInsertInput
}

input ConfigGraphqlComparisonExp {
    _and: [ConfigGraphqlComparisonExp!]
    _not: ConfigGraphqlComparisonExp
    _or: [ConfigGraphqlComparisonExp!]
    security: ConfigGraphqlSecurityComparisonExp
}

"""

"""
type ConfigGraphqlSecurity {
    """

    """
    forbidAminSecret: Boolean
    """

    """
    maxDepthQueries: ConfigUint
}

input ConfigGraphqlSecurityUpdateInput {
    forbidAminSecret: Boolean
    maxDepthQueries: ConfigUint
}

input ConfigGraphqlSecurityInsertInput {
    forbidAminSecret: Boolean
    maxDepthQueries: ConfigUint
}

input ConfigGraphqlSecurityComparisonExp {
    _and: [ConfigGraphqlSecurityComparisonExp!]
    _not: ConfigGraphqlSecurityComparisonExp
    _or: [ConfigGraphqlSecurityComparisonExp!]
    forbidAminSecret: ConfigBooleanComparisonExp
    maxDepthQueries: ConfigUintComparisonExp
}

"""
Configuration for hasura service
"""
type ConfigHasura {
    """
    Version of hasura, you can see available versions in the URL below:
    https://hub.docker.com/r/hasura/graphql-engine/tags
    """
    version: String
    """
    JWT Secrets configuration
    """
    jwtSecrets: [ConfigJWTSecret!]
    """
    Admin secret
    """
    adminSecret: String!
    """
    Webhook secret
    """
    webhookSecret: String!
    """
    Configuration for hasura services
    Reference: https://hasura.io/docs/latest/deployment/graphql-engine-flags/reference/
    """
    settings: ConfigHasuraSettings
    """

    """
    authHook: ConfigHasuraAuthHook
    """

    """
    logs: ConfigHasuraLogs
    """

    """
    events: ConfigHasuraEvents
    """
    Resources for the service
    """
    resources: ConfigResources
    """

    """
    rateLimit: ConfigRateLimit
}

input ConfigHasuraUpdateInput {
    version: String
        jwtSecrets: [ConfigJWTSecretUpdateInput!]
    adminSecret: String
    webhookSecret: String
    settings: ConfigHasuraSettingsUpdateInput
    authHook: ConfigHasuraAuthHookUpdateInput
    logs: ConfigHasuraLogsUpdateInput
    events: ConfigHasuraEventsUpdateInput
    resources: ConfigResourcesUpdateInput
    rateLimit: ConfigRateLimitUpdateInput
}

input ConfigHasuraInsertInput {
    version: String
        jwtSecrets: [ConfigJWTSecretInsertInput!]
    adminSecret: String!
    webhookSecret: String!
    settings: ConfigHasuraSettingsInsertInput
    authHook: ConfigHasuraAuthHookInsertInput
    logs: ConfigHasuraLogsInsertInput
    events: ConfigHasuraEventsInsertInput
    resources: ConfigResourcesInsertInput
    rateLimit: ConfigRateLimitInsertInput
}

input ConfigHasuraComparisonExp {
    _and: [ConfigHasuraComparisonExp!]
    _not: ConfigHasuraComparisonExp
    _or: [ConfigHasuraComparisonExp!]
    version: ConfigStringComparisonExp
    jwtSecrets: ConfigJWTSecretComparisonExp
    adminSecret: ConfigStringComparisonExp
    webhookSecret: ConfigStringComparisonExp
    settings: ConfigHasuraSettingsComparisonExp
    authHook: ConfigHasuraAuthHookComparisonExp
    logs: ConfigHasuraLogsComparisonExp
    events: ConfigHasuraEventsComparisonExp
    resources: ConfigResourcesComparisonExp
    rateLimit: ConfigRateLimitComparisonExp
}

scalar ConfigHasuraAPIs

input ConfigHasuraAPIsComparisonExp {
    _eq: ConfigHasuraAPIs
    _neq: ConfigHasuraAPIs
    _in: [ConfigHasuraAPIs!]
    _nin: [ConfigHasuraAPIs!]
}

"""

"""
type ConfigHasuraAuthHook {
    """
    HASURA_GRAPHQL_AUTH_HOOK
    """
    url: String!
    """

    """
    mode: String
    """
    HASURA_GRAPHQL_AUTH_HOOK_SEND_REQUEST_BODY
    """
    sendRequestBody: Boolean
}

input ConfigHasuraAuthHookUpdateInput {
    url: String
    mode: String
    sendRequestBody: Boolean
}

input ConfigHasuraAuthHookInsertInput {
    url: String!
    mode: String
    sendRequestBody: Boolean
}

input ConfigHasuraAuthHookComparisonExp {
    _and: [ConfigHasuraAuthHookComparisonExp!]
    _not: ConfigHasuraAuthHookComparisonExp
    _or: [ConfigHasuraAuthHookComparisonExp!]
    url: ConfigStringComparisonExp
    mode: ConfigStringComparisonExp
    sendRequestBody: ConfigBooleanComparisonExp
}

"""

"""
type ConfigHasuraEvents {
    """
    HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE
    """
    httpPoolSize: ConfigUint32
}

input ConfigHasuraEventsUpdateInput {
    httpPoolSize: ConfigUint32
}

input ConfigHasuraEventsInsertInput {
    httpPoolSize: ConfigUint32
}

input ConfigHasuraEventsComparisonExp {
    _and: [ConfigHasuraEventsComparisonExp!]
    _not: ConfigHasuraEventsComparisonExp
    _or: [ConfigHasuraEventsComparisonExp!]
    httpPoolSize: ConfigUint32ComparisonExp
}

"""

"""
type ConfigHasuraLogs {
    """

    """
    level: String
}

input ConfigHasuraLogsUpdateInput {
    level: String
}

input ConfigHasuraLogsInsertInput {
    level: String
}

input ConfigHasuraLogsComparisonExp {
    _and: [ConfigHasuraLogsComparisonExp!]
    _not: ConfigHasuraLogsComparisonExp
    _or: [ConfigHasuraLogsComparisonExp!]
    level: ConfigStringComparisonExp
}

"""
Configuration for hasura services
Reference: https://hasura.io/docs/latest/deployment/graphql-engine-flags/reference/
"""
type ConfigHasuraSettings {
    """
    HASURA_GRAPHQL_CORS_DOMAIN
    """
    corsDomain: [ConfigUrl!]
    """
    HASURA_GRAPHQL_DEV_MODE
    """
    devMode: Boolean
    """
    HASURA_GRAPHQL_ENABLE_ALLOWLIST
    """
    enableAllowList: Boolean
    """
    HASURA_GRAPHQL_ENABLE_CONSOLE
    """
    enableConsole: Boolean
    """
    HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS
    """
    enableRemoteSchemaPermissions: Boolean
    """
    HASURA_GRAPHQL_ENABLED_APIS
    """
    enabledAPIs: [ConfigHasuraAPIs!]
    """
    HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS
    """
    inferFunctionPermissions: Boolean
    """
    HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL
    """
    liveQueriesMultiplexedRefetchInterval: ConfigUint32
    """
    HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES
    """
    stringifyNumericTypes: Boolean
}

input ConfigHasuraSettingsUpdateInput {
        corsDomain: [ConfigUrl!]
    devMode: Boolean
    enableAllowList: Boolean
    enableConsole: Boolean
    enableRemoteSchemaPermissions: Boolean
        enabledAPIs: [ConfigHasuraAPIs!]
    inferFunctionPermissions: Boolean
    liveQueriesMultiplexedRefetchInterval: ConfigUint32
    stringifyNumericTypes: Boolean
}

input ConfigHasuraSettingsInsertInput {
        corsDomain: [ConfigUrl!]
    devMode: Boolean
    enableAllowList: Boolean
    enableConsole: Boolean
    enableRemoteSchemaPermissions: Boolean
        enabledAPIs: [ConfigHasuraAPIs!]
    inferFunctionPermissions: Boolean
    liveQueriesMultiplexedRefetchInterval: ConfigUint32
    stringifyNumericTypes: Boolean
}

input ConfigHasuraSettingsComparisonExp {
    _and: [ConfigHasuraSettingsComparisonExp!]
    _not: ConfigHasuraSettingsComparisonExp
    _or: [ConfigHasuraSettingsComparisonExp!]
    corsDomain: ConfigUrlComparisonExp
    devMode: ConfigBooleanComparisonExp
    enableAllowList: ConfigBooleanComparisonExp
    enableConsole: ConfigBooleanComparisonExp
    enableRemoteSchemaPermissions: ConfigBooleanComparisonExp
    enabledAPIs: ConfigHasuraAPIsComparisonExp
    inferFunctionPermissions: ConfigBooleanComparisonExp
    liveQueriesMultiplexedRefetchInterval: ConfigUint32ComparisonExp
    stringifyNumericTypes: ConfigBooleanComparisonExp
}

"""

"""
type ConfigHealthCheck {
    """

    """
    port: ConfigPort!
    """

    """
    initialDelaySeconds: Int
    """

    """
    probePeriodSeconds: Int
}

input ConfigHealthCheckUpdateInput {
    port: ConfigPort
    initialDelaySeconds: Int
    probePeriodSeconds: Int
}

input ConfigHealthCheckInsertInput {
    port: ConfigPort!
    initialDelaySeconds: Int
    probePeriodSeconds: Int
}

input ConfigHealthCheckComparisonExp {
    _and: [ConfigHealthCheckComparisonExp!]
    _not: ConfigHealthCheckComparisonExp
    _or: [ConfigHealthCheckComparisonExp!]
    port: ConfigPortComparisonExp
    initialDelaySeconds: ConfigIntComparisonExp
    probePeriodSeconds: ConfigIntComparisonExp
}

"""

"""
type ConfigIngress {
    """

    """
    fqdn: [String!]
    """

    """
    tls: ConfigIngressTls
}

input ConfigIngressUpdateInput {
        fqdn: [String!]
    tls: ConfigIngressTlsUpdateInput
}

input ConfigIngressInsertInput {
        fqdn: [String!]
    tls: ConfigIngressTlsInsertInput
}

input ConfigIngressComparisonExp {
    _and: [ConfigIngressComparisonExp!]
    _not: ConfigIngressComparisonExp
    _or: [ConfigIngressComparisonExp!]
    fqdn: ConfigStringComparisonExp
    tls: ConfigIngressTlsComparisonExp
}

"""

"""
type ConfigIngressTls {
    """

    """
    clientCA: String
}

input ConfigIngressTlsUpdateInput {
    clientCA: String
}

input ConfigIngressTlsInsertInput {
    clientCA: String
}

input ConfigIngressTlsComparisonExp {
    _and: [ConfigIngressTlsComparisonExp!]
    _not: ConfigIngressTlsComparisonExp
    _or: [ConfigIngressTlsComparisonExp!]
    clientCA: ConfigStringComparisonExp
}

"""
See https://hasura.io/docs/latest/auth/authentication/jwt/
"""
type ConfigJWTSecret {
    """

    """
    type: String
    """

    """
    key: String
    """

    """
    signingKey: String
    """

    """
    kid: String
    """

    """
    jwk_url: ConfigUrl
    """

    """
    claims_format: String
    """

    """
    audience: String
    """

    """
    issuer: String
    """

    """
    allowed_skew: ConfigUint32
    """

    """
    header: String
    """

    """
    claims_map: [ConfigClaimMap!]
    """

    """
    claims_namespace: String
    """

    """
    claims_namespace_path: String
}

input ConfigJWTSecretUpdateInput {
    type: String
    key: String
    signingKey: String
    kid: String
    jwk_url: ConfigUrl
    claims_format: String
    audience: String
    issuer: String
    allowed_skew: ConfigUint32
    header: String
        claims_map: [ConfigClaimMapUpdateInput!]
    claims_namespace: String
    claims_namespace_path: String
}

input ConfigJWTSecretInsertInput {
    type: String
    key: String
    signingKey: String
    kid: String
    jwk_url: ConfigUrl
    claims_format: String
    audience: String
    issuer: String
    allowed_skew: ConfigUint32
    header: String
        claims_map: [ConfigClaimMapInsertInput!]
    claims_namespace: String
    claims_namespace_path: String
}

input ConfigJWTSecretComparisonExp {
    _and: [ConfigJWTSecretComparisonExp!]
    _not: ConfigJWTSecretComparisonExp
    _or: [ConfigJWTSecretComparisonExp!]
    type: ConfigStringComparisonExp
    key: ConfigStringComparisonExp
    signingKey: ConfigStringComparisonExp
    kid: ConfigStringComparisonExp
    jwk_url: ConfigUrlComparisonExp
    claims_format: ConfigStringComparisonExp
    audience: ConfigStringComparisonExp
    issuer: ConfigStringComparisonExp
    allowed_skew: ConfigUint32ComparisonExp
    header: ConfigStringComparisonExp
    claims_map: ConfigClaimMapComparisonExp
    claims_namespace: ConfigStringComparisonExp
    claims_namespace_path: ConfigStringComparisonExp
}

scalar ConfigLocale

input ConfigLocaleComparisonExp {
    _eq: ConfigLocale
    _neq: ConfigLocale
    _in: [ConfigLocale!]
    _nin: [ConfigLocale!]
}

"""

"""
type ConfigNetworking {
    """

    """
    ingresses: [ConfigIngress!]
}

input ConfigNetworkingUpdateInput {
        ingresses: [ConfigIngressUpdateInput!]
}

input ConfigNetworkingInsertInput {
        ingresses: [ConfigIngressInsertInput!]
}

input ConfigNetworkingComparisonExp {
    _and: [ConfigNetworkingComparisonExp!]
    _not: ConfigNetworkingComparisonExp
    _or: [ConfigNetworkingComparisonExp!]
    ingresses: ConfigIngressComparisonExp
}

"""

"""
type ConfigObservability {
    """

    """
    grafana: ConfigGrafana!
}

input ConfigObservabilityUpdateInput {
    grafana: ConfigGrafanaUpdateInput
}

input ConfigObservabilityInsertInput {
    grafana: ConfigGrafanaInsertInput!
}

input ConfigObservabilityComparisonExp {
    _and: [ConfigObservabilityComparisonExp!]
    _not: ConfigObservabilityComparisonExp
    _or: [ConfigObservabilityComparisonExp!]
    grafana: ConfigGrafanaComparisonExp
}

scalar ConfigPort

input ConfigPortComparisonExp {
    _eq: ConfigPort
    _neq: ConfigPort
    _in: [ConfigPort!]
    _nin: [ConfigPort!]
}

"""
Configuration for postgres service
"""
type ConfigPostgres {
    """
    Version of postgres, you can see available versions in the URL below:
    https://hub.docker.com/r/nhost/postgres/tags
    """
    version: String
    """
    Resources for the service
    """
    resources: ConfigPostgresResources!
    """

    """
    settings: ConfigPostgresSettings
    """

    """
    pitr: ConfigPostgresPitr
}

input ConfigPostgresUpdateInput {
    version: String
    resources: ConfigPostgresResourcesUpdateInput
    settings: ConfigPostgresSettingsUpdateInput
    pitr: ConfigPostgresPitrUpdateInput
}

input ConfigPostgresInsertInput {
    version: String
    resources: ConfigPostgresResourcesInsertInput!
    settings: ConfigPostgresSettingsInsertInput
    pitr: ConfigPostgresPitrInsertInput
}

input ConfigPostgresComparisonExp {
    _and: [ConfigPostgresComparisonExp!]
    _not: ConfigPostgresComparisonExp
    _or: [ConfigPostgresComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigPostgresResourcesComparisonExp
    settings: ConfigPostgresSettingsComparisonExp
    pitr: ConfigPostgresPitrComparisonExp
}

"""

"""
type ConfigPostgresPitr {
    """

    """
    retention: ConfigUint8
}

input ConfigPostgresPitrUpdateInput {
    retention: ConfigUint8
}

input ConfigPostgresPitrInsertInput {
    retention: ConfigUint8
}

input ConfigPostgresPitrComparisonExp {
    _and: [ConfigPostgresPitrComparisonExp!]
    _not: ConfigPostgresPitrComparisonExp
    _or: [ConfigPostgresPitrComparisonExp!]
    retention: ConfigUint8ComparisonExp
}

"""
Resources for the service
"""
type ConfigPostgresResources {
    """

    """
    compute: ConfigResourcesCompute
    """

    """
    storage: ConfigPostgresResourcesStorage!
    """

    """
    replicas: Int
    """

    """
    enablePublicAccess: Boolean
}

input ConfigPostgresResourcesUpdateInput {
    compute: ConfigResourcesComputeUpdateInput
    storage: ConfigPostgresResourcesStorageUpdateInput
    replicas: Int
    enablePublicAccess: Boolean
}

input ConfigPostgresResourcesInsertInput {
    compute: ConfigResourcesComputeInsertInput
    storage: ConfigPostgresResourcesStorageInsertInput!
    replicas: Int
    enablePublicAccess: Boolean
}

input ConfigPostgresResourcesComparisonExp {
    _and: [ConfigPostgresResourcesComparisonExp!]
    _not: ConfigPostgresResourcesComparisonExp
    _or: [ConfigPostgresResourcesComparisonExp!]
    compute: ConfigResourcesComputeComparisonExp
    storage: ConfigPostgresResourcesStorageComparisonExp
    replicas: ConfigIntComparisonExp
    enablePublicAccess: ConfigBooleanComparisonExp
}

"""

"""
type ConfigPostgresResourcesStorage {
    """

    """
    capacity: ConfigUint32!
}

input ConfigPostgresResourcesStorageUpdateInput {
    capacity: ConfigUint32
}

input ConfigPostgresResourcesStorageInsertInput {
    capacity: ConfigUint32!
}

input ConfigPostgresResourcesStorageComparisonExp {
    _and: [ConfigPostgresResourcesStorageComparisonExp!]
    _not: ConfigPostgresResourcesStorageComparisonExp
    _or: [ConfigPostgresResourcesStorageComparisonExp!]
    capacity: ConfigUint32ComparisonExp
}

"""

"""
type ConfigPostgresSettings {
    """

    """
    jit: String
    """

    """
    maxConnections: ConfigInt32
    """

    """
    sharedBuffers: String
    """

    """
    effectiveCacheSize: String
    """

    """
    maintenanceWorkMem: String
    """

    """
    checkpointCompletionTarget: Float
    """

    """
    walBuffers: String
    """

    """
    defaultStatisticsTarget: ConfigInt32
    """

    """
    randomPageCost: Float
    """

    """
    effectiveIOConcurrency: ConfigInt32
    """

    """
    workMem: String
    """

    """
    hugePages: String
    """

    """
    minWalSize: String
    """

    """
    maxWalSize: String
    """

    """
    maxWorkerProcesses: ConfigInt32
    """

    """
    maxParallelWorkersPerGather: ConfigInt32
    """

    """
    maxParallelWorkers: ConfigInt32
    """

    """
    maxParallelMaintenanceWorkers: ConfigInt32
    """

    """
    walLevel: String
    """

    """
    maxWalSenders: ConfigInt32
    """

    """
    maxReplicationSlots: ConfigInt32
    """

    """
    archiveTimeout: ConfigInt32
    """

    """
    trackIoTiming: String
}

input ConfigPostgresSettingsUpdateInput {
    jit: String
    maxConnections: ConfigInt32
    sharedBuffers: String
    effectiveCacheSize: String
    maintenanceWorkMem: String
    checkpointCompletionTarget: Float
    walBuffers: String
    defaultStatisticsTarget: ConfigInt32
    randomPageCost: Float
    effectiveIOConcurrency: ConfigInt32
    workMem: String
    hugePages: String
    minWalSize: String
    maxWalSize: String
    maxWorkerProcesses: ConfigInt32
    maxParallelWorkersPerGather: ConfigInt32
    maxParallelWorkers: ConfigInt32
    maxParallelMaintenanceWorkers: ConfigInt32
    walLevel: String
    maxWalSenders: ConfigInt32
    maxReplicationSlots: ConfigInt32
    archiveTimeout: ConfigInt32
    trackIoTiming: String
}

input ConfigPostgresSettingsInsertInput {
    jit: String
    maxConnections: ConfigInt32
    sharedBuffers: String
    effectiveCacheSize: String
    maintenanceWorkMem: String
    checkpointCompletionTarget: Float
    walBuffers: String
    defaultStatisticsTarget: ConfigInt32
    randomPageCost: Float
    effectiveIOConcurrency: ConfigInt32
    workMem: String
    hugePages: String
    minWalSize: String
    maxWalSize: String
    maxWorkerProcesses: ConfigInt32
    maxParallelWorkersPerGather: ConfigInt32
    maxParallelWorkers: ConfigInt32
    maxParallelMaintenanceWorkers: ConfigInt32
    walLevel: String
    maxWalSenders: ConfigInt32
    maxReplicationSlots: ConfigInt32
    archiveTimeout: ConfigInt32
    trackIoTiming: String
}

input ConfigPostgresSettingsComparisonExp {
    _and: [ConfigPostgresSettingsComparisonExp!]
    _not: ConfigPostgresSettingsComparisonExp
    _or: [ConfigPostgresSettingsComparisonExp!]
    jit: ConfigStringComparisonExp
    maxConnections: ConfigInt32ComparisonExp
    sharedBuffers: ConfigStringComparisonExp
    effectiveCacheSize: ConfigStringComparisonExp
    maintenanceWorkMem: ConfigStringComparisonExp
    checkpointCompletionTarget: ConfigFloatComparisonExp
    walBuffers: ConfigStringComparisonExp
    defaultStatisticsTarget: ConfigInt32ComparisonExp
    randomPageCost: ConfigFloatComparisonExp
    effectiveIOConcurrency: ConfigInt32ComparisonExp
    workMem: ConfigStringComparisonExp
    hugePages: ConfigStringComparisonExp
    minWalSize: ConfigStringComparisonExp
    maxWalSize: ConfigStringComparisonExp
    maxWorkerProcesses: ConfigInt32ComparisonExp
    maxParallelWorkersPerGather: ConfigInt32ComparisonExp
    maxParallelWorkers: ConfigInt32ComparisonExp
    maxParallelMaintenanceWorkers: ConfigInt32ComparisonExp
    walLevel: ConfigStringComparisonExp
    maxWalSenders: ConfigInt32ComparisonExp
    maxReplicationSlots: ConfigInt32ComparisonExp
    archiveTimeout: ConfigInt32ComparisonExp
    trackIoTiming: ConfigStringComparisonExp
}

"""

"""
type ConfigProvider {
    """

    """
    smtp: ConfigSmtp
    """

    """
    sms: ConfigSms
}

input ConfigProviderUpdateInput {
    smtp: ConfigSmtpUpdateInput
    sms: ConfigSmsUpdateInput
}

input ConfigProviderInsertInput {
    smtp: ConfigSmtpInsertInput
    sms: ConfigSmsInsertInput
}

input ConfigProviderComparisonExp {
    _and: [ConfigProviderComparisonExp!]
    _not: ConfigProviderComparisonExp
    _or: [ConfigProviderComparisonExp!]
    smtp: ConfigSmtpComparisonExp
    sms: ConfigSmsComparisonExp
}

"""

"""
type ConfigRateLimit {
    """

    """
    limit: ConfigUint32!
    """

    """
    interval: String!
}

input ConfigRateLimitUpdateInput {
    limit: ConfigUint32
    interval: String
}

input ConfigRateLimitInsertInput {
    limit: ConfigUint32!
    interval: String!
}

input ConfigRateLimitComparisonExp {
    _and: [ConfigRateLimitComparisonExp!]
    _not: ConfigRateLimitComparisonExp
    _or: [ConfigRateLimitComparisonExp!]
    limit: ConfigUint32ComparisonExp
    interval: ConfigStringComparisonExp
}

"""
Resource configuration for a service
"""
type ConfigResources {
    """

    """
    compute: ConfigResourcesCompute
    """
    Number of replicas for a service
    """
    replicas: ConfigUint8
    """

    """
    autoscaler: ConfigAutoscaler
    """

    """
    networking: ConfigNetworking
}

input ConfigResourcesUpdateInput {
    compute: ConfigResourcesComputeUpdateInput
    replicas: ConfigUint8
    autoscaler: ConfigAutoscalerUpdateInput
    networking: ConfigNetworkingUpdateInput
}

input ConfigResourcesInsertInput {
    compute: ConfigResourcesComputeInsertInput
    replicas: ConfigUint8
    autoscaler: ConfigAutoscalerInsertInput
    networking: ConfigNetworkingInsertInput
}

input ConfigResourcesComparisonExp {
    _and: [ConfigResourcesComparisonExp!]
    _not: ConfigResourcesComparisonExp
    _or: [ConfigResourcesComparisonExp!]
    compute: ConfigResourcesComputeComparisonExp
    replicas: ConfigUint8ComparisonExp
    autoscaler: ConfigAutoscalerComparisonExp
    networking: ConfigNetworkingComparisonExp
}

"""

"""
type ConfigResourcesCompute {
    """
    milicpus, 1000 milicpus = 1 cpu
    """
    cpu: ConfigUint32!
    """
    MiB: 128MiB to 30GiB
    """
    memory: ConfigUint32!
}

input ConfigResourcesComputeUpdateInput {
    cpu: ConfigUint32
    memory: ConfigUint32
}

input ConfigResourcesComputeInsertInput {
    cpu: ConfigUint32!
    memory: ConfigUint32!
}

input ConfigResourcesComputeComparisonExp {
    _and: [ConfigResourcesComputeComparisonExp!]
    _not: ConfigResourcesComputeComparisonExp
    _or: [ConfigResourcesComputeComparisonExp!]
    cpu: ConfigUint32ComparisonExp
    memory: ConfigUint32ComparisonExp
}

"""

"""
type ConfigRunServiceConfig {
    """

    """
    name: ConfigRunServiceName!
    """

    """
    image: ConfigRunServiceImage!
    """

    """
    command: [String!]
    """

    """
    environment: [ConfigEnvironmentVariable!]
    """

    """
    ports: [ConfigRunServicePort!]
    """

    """
    resources: ConfigRunServiceResources!
    """

    """
    healthCheck: ConfigHealthCheck
}

input ConfigRunServiceConfigUpdateInput {
    name: ConfigRunServiceName
    image: ConfigRunServiceImageUpdateInput
        command: [String!]
        environment: [ConfigEnvironmentVariableUpdateInput!]
        ports: [ConfigRunServicePortUpdateInput!]
    resources: ConfigRunServiceResourcesUpdateInput
    healthCheck: ConfigHealthCheckUpdateInput
}

input ConfigRunServiceConfigInsertInput {
    name: ConfigRunServiceName!
    image: ConfigRunServiceImageInsertInput!
        command: [String!]
        environment: [ConfigEnvironmentVariableInsertInput!]
        ports: [ConfigRunServicePortInsertInput!]
    resources: ConfigRunServiceResourcesInsertInput!
    healthCheck: ConfigHealthCheckInsertInput
}

input ConfigRunServiceConfigComparisonExp {
    _and: [ConfigRunServiceConfigComparisonExp!]
    _not: ConfigRunServiceConfigComparisonExp
    _or: [ConfigRunServiceConfigComparisonExp!]
    name: ConfigRunServiceNameComparisonExp
    image: ConfigRunServiceImageComparisonExp
    command: ConfigStringComparisonExp
    environment: ConfigEnvironmentVariableComparisonExp
    ports: ConfigRunServicePortComparisonExp
    resources: ConfigRunServiceResourcesComparisonExp
    healthCheck: ConfigHealthCheckComparisonExp
}

"""

"""
type ConfigRunServiceImage {
    """

    """
    image: String!
    """
    content of "auths", i.e., { "auths": $THIS }
    """
    pullCredentials: String
}

input ConfigRunServiceImageUpdateInput {
    image: String
    pullCredentials: String
}

input ConfigRunServiceImageInsertInput {
    image: String!
    pullCredentials: String
}

input ConfigRunServiceImageComparisonExp {
    _and: [ConfigRunServiceImageComparisonExp!]
    _not: ConfigRunServiceImageComparisonExp
    _or: [ConfigRunServiceImageComparisonExp!]
    image: ConfigStringComparisonExp
    pullCredentials: ConfigStringComparisonExp
}

scalar ConfigRunServiceName

input ConfigRunServiceNameComparisonExp {
    _eq: ConfigRunServiceName
    _neq: ConfigRunServiceName
    _in: [ConfigRunServiceName!]
    _nin: [ConfigRunServiceName!]
}

"""

"""
type ConfigRunServicePort {
    """

    """
    port: ConfigPort!
    """

    """
    type: String!
    """

    """
    publish: Boolean
    """

    """
    ingresses: [ConfigIngress!]
    """

    """
    rateLimit: ConfigRateLimit
}

input ConfigRunServicePortUpdateInput {
    port: ConfigPort
    type: String
    publish: Boolean
        ingresses: [ConfigIngressUpdateInput!]
    rateLimit: ConfigRateLimitUpdateInput
}

input ConfigRunServicePortInsertInput {
    port: ConfigPort!
    type: String!
    publish: Boolean
        ingresses: [ConfigIngressInsertInput!]
    rateLimit: ConfigRateLimitInsertInput
}

input ConfigRunServicePortComparisonExp {
    _and: [ConfigRunServicePortComparisonExp!]
    _not: ConfigRunServicePortComparisonExp
    _or: [ConfigRunServicePortComparisonExp!]
    port: ConfigPortComparisonExp
    type: ConfigStringComparisonExp
    publish: ConfigBooleanComparisonExp
    ingresses: ConfigIngressComparisonExp
    rateLimit: ConfigRateLimitComparisonExp
}

"""
Resource configuration for a service
"""
type ConfigRunServiceResources {
    """

    """
    compute: ConfigComputeResources!
    """

    """
    storage: [ConfigRunServiceResourcesStorage!]
    """
    Number of replicas for a service
    """
    replicas: ConfigUint8!
    """

    """
    autoscaler: ConfigAutoscaler
}

input ConfigRunServiceResourcesUpdateInput {
    compute: ConfigComputeResourcesUpdateInput
        storage: [ConfigRunServiceResourcesStorageUpdateInput!]
    replicas: ConfigUint8
    autoscaler: ConfigAutoscalerUpdateInput
}

input ConfigRunServiceResourcesInsertInput {
    compute: ConfigComputeResourcesInsertInput!
        storage: [ConfigRunServiceResourcesStorageInsertInput!]
    replicas: ConfigUint8!
    autoscaler: ConfigAutoscalerInsertInput
}

input ConfigRunServiceResourcesComparisonExp {
    _and: [ConfigRunServiceResourcesComparisonExp!]
    _not: ConfigRunServiceResourcesComparisonExp
    _or: [ConfigRunServiceResourcesComparisonExp!]
    compute: ConfigComputeResourcesComparisonExp
    storage: ConfigRunServiceResourcesStorageComparisonExp
    replicas: ConfigUint8ComparisonExp
    autoscaler: ConfigAutoscalerComparisonExp
}

"""

"""
type ConfigRunServiceResourcesStorage {
    """
    name of the volume, changing it will cause data loss
    """
    name: ConfigRunServiceName!
    """
    GiB
    """
    capacity: ConfigUint32!
    """

    """
    path: String!
}

input ConfigRunServiceResourcesStorageUpdateInput {
    name: ConfigRunServiceName
    capacity: ConfigUint32
    path: String
}

input ConfigRunServiceResourcesStorageInsertInput {
    name: ConfigRunServiceName!
    capacity: ConfigUint32!
    path: String!
}

input ConfigRunServiceResourcesStorageComparisonExp {
    _and: [ConfigRunServiceResourcesStorageComparisonExp!]
    _not: ConfigRunServiceResourcesStorageComparisonExp
    _or: [ConfigRunServiceResourcesStorageComparisonExp!]
    name: ConfigRunServiceNameComparisonExp
    capacity: ConfigUint32ComparisonExp
    path: ConfigStringComparisonExp
}

"""

"""
type ConfigSms {
    """

    """
    provider: String
    """

    """
    accountSid: String!
    """

    """
    authToken: String!
    """

    """
    messagingServiceId: String!
}

input ConfigSmsUpdateInput {
    provider: String
    accountSid: String
    authToken: String
    messagingServiceId: String
}

input ConfigSmsInsertInput {
    provider: String
    accountSid: String!
    authToken: String!
    messagingServiceId: String!
}

input ConfigSmsComparisonExp {
    _and: [ConfigSmsComparisonExp!]
    _not: ConfigSmsComparisonExp
    _or: [ConfigSmsComparisonExp!]
    provider: ConfigStringComparisonExp
    accountSid: ConfigStringComparisonExp
    authToken: ConfigStringComparisonExp
    messagingServiceId: ConfigStringComparisonExp
}

"""

"""
type ConfigSmtp {
    """

    """
    user: String!
    """

    """
    password: String!
    """

    """
    sender: String!
    """

    """
    host: String!
    """

    """
    port: ConfigPort!
    """

    """
    secure: Boolean!
    """

    """
    method: String!
}

input ConfigSmtpUpdateInput {
    user: String
    password: String
    sender: String
    host: String
    port: ConfigPort
    secure: Boolean
    method: String
}

input ConfigSmtpInsertInput {
    user: String!
    password: String!
    sender: String!
    host: String!
    port: ConfigPort!
    secure: Boolean!
    method: String!
}

input ConfigSmtpComparisonExp {
    _and: [ConfigSmtpComparisonExp!]
    _not: ConfigSmtpComparisonExp
    _or: [ConfigSmtpComparisonExp!]
    user: ConfigStringComparisonExp
    password: ConfigStringComparisonExp
    sender: ConfigStringComparisonExp
    host: ConfigStringComparisonExp
    port: ConfigPortComparisonExp
    secure: ConfigBooleanComparisonExp
    method: ConfigStringComparisonExp
}

"""

"""
type ConfigStandardOauthProvider {
    """

    """
    enabled: Boolean
    """

    """
    clientId: String
    """

    """
    clientSecret: String
}

input ConfigStandardOauthProviderUpdateInput {
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigStandardOauthProviderInsertInput {
    enabled: Boolean
    clientId: String
    clientSecret: String
}

input ConfigStandardOauthProviderComparisonExp {
    _and: [ConfigStandardOauthProviderComparisonExp!]
    _not: ConfigStandardOauthProviderComparisonExp
    _or: [ConfigStandardOauthProviderComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    clientId: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""

"""
type ConfigStandardOauthProviderWithScope {
    """

    """
    enabled: Boolean
    """

    """
    audience: String
    """

    """
    clientId: String
    """

    """
    scope: [String!]
    """

    """
    clientSecret: String
}

input ConfigStandardOauthProviderWithScopeUpdateInput {
    enabled: Boolean
    audience: String
    clientId: String
        scope: [String!]
    clientSecret: String
}

input ConfigStandardOauthProviderWithScopeInsertInput {
    enabled: Boolean
    audience: String
    clientId: String
        scope: [String!]
    clientSecret: String
}

input ConfigStandardOauthProviderWithScopeComparisonExp {
    _and: [ConfigStandardOauthProviderWithScopeComparisonExp!]
    _not: ConfigStandardOauthProviderWithScopeComparisonExp
    _or: [ConfigStandardOauthProviderWithScopeComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    audience: ConfigStringComparisonExp
    clientId: ConfigStringComparisonExp
    scope: ConfigStringComparisonExp
    clientSecret: ConfigStringComparisonExp
}

"""
Configuration for storage service
"""
type ConfigStorage {
    """
    Version of storage service, you can see available versions in the URL below:
    https://hub.docker.com/r/nhost/hasura-storage/tags
    
    Releases:
    
    https://github.com/nhost/hasura-storage/releases
    """
    version: String
    """
    Networking (custom domains at the moment) are not allowed as we need to do further
    configurations in the CDN. We will enable it again in the future.
    """
    resources: ConfigResources
    """

    """
    antivirus: ConfigStorageAntivirus
    """

    """
    rateLimit: ConfigRateLimit
}

input ConfigStorageUpdateInput {
    version: String
    resources: ConfigResourcesUpdateInput
    antivirus: ConfigStorageAntivirusUpdateInput
    rateLimit: ConfigRateLimitUpdateInput
}

input ConfigStorageInsertInput {
    version: String
    resources: ConfigResourcesInsertInput
    antivirus: ConfigStorageAntivirusInsertInput
    rateLimit: ConfigRateLimitInsertInput
}

input ConfigStorageComparisonExp {
    _and: [ConfigStorageComparisonExp!]
    _not: ConfigStorageComparisonExp
    _or: [ConfigStorageComparisonExp!]
    version: ConfigStringComparisonExp
    resources: ConfigResourcesComparisonExp
    antivirus: ConfigStorageAntivirusComparisonExp
    rateLimit: ConfigRateLimitComparisonExp
}

"""

"""
type ConfigStorageAntivirus {
    """

    """
    server: String
}

input ConfigStorageAntivirusUpdateInput {
    server: String
}

input ConfigStorageAntivirusInsertInput {
    server: String
}

input ConfigStorageAntivirusComparisonExp {
    _and: [ConfigStorageAntivirusComparisonExp!]
    _not: ConfigStorageAntivirusComparisonExp
    _or: [ConfigStorageAntivirusComparisonExp!]
    server: ConfigStringComparisonExp
}

"""

"""
type ConfigSystemConfig {
    """

    """
    auth: ConfigSystemConfigAuth
    """

    """
    graphql: ConfigSystemConfigGraphql
    """

    """
    postgres: ConfigSystemConfigPostgres!
    """

    """
    persistentVolumesEncrypted: Boolean
}

input ConfigSystemConfigUpdateInput {
    auth: ConfigSystemConfigAuthUpdateInput
    graphql: ConfigSystemConfigGraphqlUpdateInput
    postgres: ConfigSystemConfigPostgresUpdateInput
    persistentVolumesEncrypted: Boolean
}

input ConfigSystemConfigInsertInput {
    auth: ConfigSystemConfigAuthInsertInput
    graphql: ConfigSystemConfigGraphqlInsertInput
    postgres: ConfigSystemConfigPostgresInsertInput!
    persistentVolumesEncrypted: Boolean
}

input ConfigSystemConfigComparisonExp {
    _and: [ConfigSystemConfigComparisonExp!]
    _not: ConfigSystemConfigComparisonExp
    _or: [ConfigSystemConfigComparisonExp!]
    auth: ConfigSystemConfigAuthComparisonExp
    graphql: ConfigSystemConfigGraphqlComparisonExp
    postgres: ConfigSystemConfigPostgresComparisonExp
    persistentVolumesEncrypted: ConfigBooleanComparisonExp
}

"""

"""
type ConfigSystemConfigAuth {
    """

    """
    email: ConfigSystemConfigAuthEmail
}

input ConfigSystemConfigAuthUpdateInput {
    email: ConfigSystemConfigAuthEmailUpdateInput
}

input ConfigSystemConfigAuthInsertInput {
    email: ConfigSystemConfigAuthEmailInsertInput
}

input ConfigSystemConfigAuthComparisonExp {
    _and: [ConfigSystemConfigAuthComparisonExp!]
    _not: ConfigSystemConfigAuthComparisonExp
    _or: [ConfigSystemConfigAuthComparisonExp!]
    email: ConfigSystemConfigAuthEmailComparisonExp
}

"""

"""
type ConfigSystemConfigAuthEmail {
    """

    """
    templates: ConfigSystemConfigAuthEmailTemplates
}

input ConfigSystemConfigAuthEmailUpdateInput {
    templates: ConfigSystemConfigAuthEmailTemplatesUpdateInput
}

input ConfigSystemConfigAuthEmailInsertInput {
    templates: ConfigSystemConfigAuthEmailTemplatesInsertInput
}

input ConfigSystemConfigAuthEmailComparisonExp {
    _and: [ConfigSystemConfigAuthEmailComparisonExp!]
    _not: ConfigSystemConfigAuthEmailComparisonExp
    _or: [ConfigSystemConfigAuthEmailComparisonExp!]
    templates: ConfigSystemConfigAuthEmailTemplatesComparisonExp
}

"""

"""
type ConfigSystemConfigAuthEmailTemplates {
    """

    """
    s3Key: String
}

input ConfigSystemConfigAuthEmailTemplatesUpdateInput {
    s3Key: String
}

input ConfigSystemConfigAuthEmailTemplatesInsertInput {
    s3Key: String
}

input ConfigSystemConfigAuthEmailTemplatesComparisonExp {
    _and: [ConfigSystemConfigAuthEmailTemplatesComparisonExp!]
    _not: ConfigSystemConfigAuthEmailTemplatesComparisonExp
    _or: [ConfigSystemConfigAuthEmailTemplatesComparisonExp!]
    s3Key: ConfigStringComparisonExp
}

"""

"""
type ConfigSystemConfigGraphql {
    """
    manually enable graphi on a per-service basis
    by default it follows the plan
    """
    featureAdvancedGraphql: Boolean
}

input ConfigSystemConfigGraphqlUpdateInput {
    featureAdvancedGraphql: Boolean
}

input ConfigSystemConfigGraphqlInsertInput {
    featureAdvancedGraphql: Boolean
}

input ConfigSystemConfigGraphqlComparisonExp {
    _and: [ConfigSystemConfigGraphqlComparisonExp!]
    _not: ConfigSystemConfigGraphqlComparisonExp
    _or: [ConfigSystemConfigGraphqlComparisonExp!]
    featureAdvancedGraphql: ConfigBooleanComparisonExp
}

"""

"""
type ConfigSystemConfigPostgres {
    """

    """
    enabled: Boolean
    """

    """
    majorVersion: String
    """

    """
    connectionString: ConfigSystemConfigPostgresConnectionString!
    """

    """
    database: String!
    """

    """
    disk: ConfigSystemConfigPostgresDisk
}

input ConfigSystemConfigPostgresUpdateInput {
    enabled: Boolean
    majorVersion: String
    connectionString: ConfigSystemConfigPostgresConnectionStringUpdateInput
    database: String
    disk: ConfigSystemConfigPostgresDiskUpdateInput
}

input ConfigSystemConfigPostgresInsertInput {
    enabled: Boolean
    majorVersion: String
    connectionString: ConfigSystemConfigPostgresConnectionStringInsertInput!
    database: String!
    disk: ConfigSystemConfigPostgresDiskInsertInput
}

input ConfigSystemConfigPostgresComparisonExp {
    _and: [ConfigSystemConfigPostgresComparisonExp!]
    _not: ConfigSystemConfigPostgresComparisonExp
    _or: [ConfigSystemConfigPostgresComparisonExp!]
    enabled: ConfigBooleanComparisonExp
    majorVersion: ConfigStringComparisonExp
    connectionString: ConfigSystemConfigPostgresConnectionStringComparisonExp
    database: ConfigStringComparisonExp
    disk: ConfigSystemConfigPostgresDiskComparisonExp
}

"""

"""
type ConfigSystemConfigPostgresConnectionString {
    """

    """
    backup: String!
    """

    """
    hasura: String!
    """

    """
    auth: String!
    """

    """
    storage: String!
}

input ConfigSystemConfigPostgresConnectionStringUpdateInput {
    backup: String
    hasura: String
    auth: String
    storage: String
}

input ConfigSystemConfigPostgresConnectionStringInsertInput {
    backup: String!
    hasura: String!
    auth: String!
    storage: String!
}

input ConfigSystemConfigPostgresConnectionStringComparisonExp {
    _and: [ConfigSystemConfigPostgresConnectionStringComparisonExp!]
    _not: ConfigSystemConfigPostgresConnectionStringComparisonExp
    _or: [ConfigSystemConfigPostgresConnectionStringComparisonExp!]
    backup: ConfigStringComparisonExp
    hasura: ConfigStringComparisonExp
    auth: ConfigStringComparisonExp
    storage: ConfigStringComparisonExp
}

"""

"""
type ConfigSystemConfigPostgresDisk {
    """

    """
    iops: ConfigUint32
    """

    """
    tput: ConfigUint32
}

input ConfigSystemConfigPostgresDiskUpdateInput {
    iops: ConfigUint32
    tput: ConfigUint32
}

input ConfigSystemConfigPostgresDiskInsertInput {
    iops: ConfigUint32
    tput: ConfigUint32
}

input ConfigSystemConfigPostgresDiskComparisonExp {
    _and: [ConfigSystemConfigPostgresDiskComparisonExp!]
    _not: ConfigSystemConfigPostgresDiskComparisonExp
    _or: [ConfigSystemConfigPostgresDiskComparisonExp!]
    iops: ConfigUint32ComparisonExp
    tput: ConfigUint32ComparisonExp
}

scalar ConfigUrl

input ConfigUrlComparisonExp {
    _eq: ConfigUrl
    _neq: ConfigUrl
    _in: [ConfigUrl!]
    _nin: [ConfigUrl!]
}

scalar ConfigUserRole

input ConfigUserRoleComparisonExp {
    _eq: ConfigUserRole
    _neq: ConfigUserRole
    _in: [ConfigUserRole!]
    _nin: [ConfigUserRole!]
}