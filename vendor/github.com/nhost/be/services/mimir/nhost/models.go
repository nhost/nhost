// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package nhost

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Announcement struct {
	ID        uuid.UUID
	Href      string
	Content   string
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	ExpiresAt pgtype.Timestamptz
}

type AnnouncementsRead struct {
	ID             uuid.UUID
	CreatedAt      pgtype.Timestamptz
	AnnouncementID uuid.UUID
	UserID         uuid.UUID
}

type App struct {
	ID                         uuid.UUID
	CreatedAt                  pgtype.Timestamptz
	UpdatedAt                  pgtype.Timestamptz
	WorkspaceID                pgtype.UUID
	Name                       string
	Slug                       string
	LegacyPlanID               pgtype.UUID
	LegacyStripeSubscriptionID pgtype.Text
	RegionID                   uuid.UUID
	GithubRepositoryID         pgtype.UUID
	Subdomain                  string
	RepositoryProductionBranch string
	MetadataFunctions          []byte
	DesiredState               int32
	CreatorUserID              pgtype.UUID
	NhostBaseFolder            string
	MimirConfigEnc             pgtype.Text
	MimirSystemConfigEnc       pgtype.Text
	MimirSecretsEnc            pgtype.Text
	CurrentState               pgtype.Int4
	StateMatch                 pgtype.Bool
	IsLocked                   pgtype.Bool
	IsLockedReason             pgtype.Text
	OrganizationID             pgtype.UUID
	AutomaticDeploys           bool
}

type AppState struct {
	ID   int32
	Name string
}

type AppStateHistory struct {
	ID        uuid.UUID
	AppID     uuid.UUID
	StateID   int32
	Message   pgtype.Text
	CreatedAt pgtype.Timestamptz
}

// List of available Oauth providers. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthProvider struct {
	ID string
}

// Oauth requests, inserted before redirecting to the provider's site. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthProviderRequest struct {
	ID      uuid.UUID
	Options []byte
}

// User refresh tokens. Hasura auth uses them to rotate new access tokens as long as the refresh token is not expired. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthRefreshToken struct {
	ID               uuid.UUID
	CreatedAt        pgtype.Timestamptz
	ExpiresAt        pgtype.Timestamptz
	UserID           uuid.UUID
	Metadata         []byte
	Type             string
	RefreshTokenHash pgtype.Text
}

type AuthRefreshTokenType struct {
	Value   string
	Comment pgtype.Text
}

// Persistent Hasura roles for users. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthRole struct {
	Role string
}

// Internal table for tracking migrations. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthSchemaMigration struct {
	Version int64
	Dirty   bool
}

// User account information. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthUser struct {
	ID                       uuid.UUID
	CreatedAt                pgtype.Timestamptz
	UpdatedAt                pgtype.Timestamptz
	LastSeen                 pgtype.Timestamptz
	Disabled                 bool
	DisplayName              string
	AvatarUrl                string
	Locale                   string
	Email                    interface{}
	PhoneNumber              pgtype.Text
	PasswordHash             pgtype.Text
	EmailVerified            bool
	PhoneNumberVerified      bool
	NewEmail                 interface{}
	OtpMethodLastUsed        pgtype.Text
	OtpHash                  pgtype.Text
	OtpHashExpiresAt         pgtype.Timestamptz
	DefaultRole              string
	IsAnonymous              bool
	TotpSecret               pgtype.Text
	ActiveMfaType            pgtype.Text
	Ticket                   pgtype.Text
	TicketExpiresAt          pgtype.Timestamptz
	Metadata                 []byte
	WebauthnCurrentChallenge pgtype.Text
}

// Active providers for a given user. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthUserProvider struct {
	ID             uuid.UUID
	CreatedAt      pgtype.Timestamptz
	UpdatedAt      pgtype.Timestamptz
	UserID         uuid.UUID
	AccessToken    string
	RefreshToken   pgtype.Text
	ProviderID     string
	ProviderUserID string
}

// Roles of users. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthUserRole struct {
	ID        uuid.UUID
	CreatedAt pgtype.Timestamptz
	UserID    uuid.UUID
	Role      string
}

// User webauthn security keys. Don't modify its structure as Hasura Auth relies on it to function properly.
type AuthUserSecurityKey struct {
	ID                  uuid.UUID
	UserID              uuid.UUID
	CredentialID        string
	CredentialPublicKey []byte
	Counter             int64
	Transports          string
	Nickname            pgtype.Text
}

type Backup struct {
	ID          uuid.UUID
	AppID       uuid.UUID
	Size        int64
	CreatedAt   pgtype.Timestamptz
	CompletedAt pgtype.Timestamptz
	ExpiresAt   pgtype.Timestamptz
}

type BillingDedicatedCompute struct {
	ID              uuid.UUID
	CreatedAt       pgtype.Timestamptz
	UpdatedAt       pgtype.Timestamptz
	AppID           uuid.UUID
	TotalMillicores int32
	OrganizationID  pgtype.UUID
}

type BillingReport struct {
	ID                   uuid.UUID
	CreatedAt            pgtype.Timestamptz
	UpdatedAt            pgtype.Timestamptz
	AppID                uuid.UUID
	ReportStarts         pgtype.Timestamptz
	ReportEnds           pgtype.Timestamptz
	Value                int32
	Pending              bool
	Type                 string
	OrganizationID       pgtype.UUID
	StripeSubscriptionID string
}

type BillingReportResourceType struct {
	Value   string
	Comment string
}

type BillingReportType struct {
	Value   string
	Comment pgtype.Text
}

type BillingReportsResource struct {
	ID                   uuid.UUID
	CreatedAt            pgtype.Timestamptz
	UpdatedAt            pgtype.Timestamptz
	OrganizationID       uuid.UUID
	AppIds               []uuid.UUID
	ReportStarts         pgtype.Timestamptz
	ReportEnds           pgtype.Timestamptz
	Value                int32
	Pending              bool
	Type                 string
	StripeSubscriptionID string
}

type BillingResource struct {
	ID               uuid.UUID
	CreatedAt        pgtype.Timestamptz
	UpdatedAt        pgtype.Timestamptz
	AppID            uuid.UUID
	FunctionsAmount  int32
	CustomDomains    int32
	PersistentVolume int32
	OrganizationID   pgtype.UUID
	Pitr             int32
}

type BillingSubscription struct {
	ID               uuid.UUID
	CreatedAt        pgtype.Timestamptz
	UpdatedAt        pgtype.Timestamptz
	AppID            uuid.UUID
	DedicatedCompute pgtype.Text
	Egress           pgtype.Text
	Functions        pgtype.Text
	FunctionsAmount  pgtype.Text
	PersistentVolume pgtype.Text
	CustomDomains    pgtype.Text
}

type BillingSubscriptionItem struct {
	ID                    uuid.UUID
	CreatedAt             pgtype.Timestamptz
	UpdatedAt             pgtype.Timestamptz
	Subscription          string
	DedicatedCompute      string
	Egress                string
	FunctionsUsageSeconds string
	FunctionsAmount       string
	PersistentVolume      string
	CustomDomains         string
	Pitr                  string
}

type CliToken struct {
	ID        uuid.UUID
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	UserID    uuid.UUID
	Token     uuid.UUID
}

type Continent struct {
	// Continent code
	Code string
	// Continent name
	Name pgtype.Text
}

type Country struct {
	// Two-letter country code (ISO 3166-1 alpha-2)
	Code string
	// English country name
	Name string
	// Full English country name
	FullName pgtype.Text
	// Three-letter country code (ISO 3166-1 alpha-3)
	Iso3 pgtype.Text
	// Three-letter country code (ISO 3166-1 numeric)
	IsoNumber     pgtype.Int2
	ContinentCode string
	EmojiFlag     pgtype.Text
}

// Table that keeps track of deployments done by watchtower
type Deployment struct {
	ID                  uuid.UUID
	CommitSha           string
	DeploymentStartedAt pgtype.Timestamptz
	DeploymentStatus    pgtype.Text
	DeploymentEndedAt   pgtype.Timestamptz
	MigrationsStartedAt pgtype.Timestamptz
	MigrationsStatus    pgtype.Text
	MigrationsEndedAt   pgtype.Timestamptz
	MetadataStartedAt   pgtype.Timestamptz
	MetadataStatus      pgtype.Text
	MetadataEndedAt     pgtype.Timestamptz
	FunctionsStartedAt  pgtype.Timestamptz
	FunctionsStatus     pgtype.Text
	FunctionsEndedAt    pgtype.Timestamptz
	AppID               uuid.UUID
	CommitUserName      pgtype.Text
	CommitUserAvatarUrl pgtype.Text
	CommitMessage       pgtype.Text
}

type DeploymentLog struct {
	ID           uuid.UUID
	DeploymentID uuid.UUID
	Message      string
	CreatedAt    pgtype.Timestamptz
}

type FeatureFlag struct {
	ID          uuid.UUID
	Name        string
	AppID       uuid.UUID
	Value       string
	Description string
}

type GithubAppInstallation struct {
	ID                              uuid.UUID
	CreatedAt                       pgtype.Timestamptz
	UpdatedAt                       pgtype.Timestamptz
	ExternalGithubAppInstallationID pgtype.Int4
	UserID                          pgtype.UUID
	GithubData                      []byte
	AccountType                     pgtype.Text
	AccountLogin                    pgtype.Text
	AccountNodeID                   pgtype.Text
	AccountAvatarUrl                pgtype.Text
}

type GithubRepository struct {
	ID                             uuid.UUID
	CreatedAt                      pgtype.Timestamptz
	UpdatedAt                      pgtype.Timestamptz
	Name                           string
	FullName                       string
	Private                        bool
	GithubAppInstallationID        uuid.UUID
	ExternalGithubRepositoryNodeID string
}

type HdbCatalogEventInvocationLog struct {
	ID          string
	TriggerName pgtype.Text
	EventID     pgtype.Text
	Status      pgtype.Int4
	Request     []byte
	Response    []byte
	CreatedAt   pgtype.Timestamp
}

type HdbCatalogEventLog struct {
	ID          string
	SchemaName  string
	TableName   string
	TriggerName string
	Payload     []byte
	Delivered   bool
	Error       bool
	Tries       int32
	CreatedAt   pgtype.Timestamp
	Locked      pgtype.Timestamptz
	NextRetryAt pgtype.Timestamp
	Archived    bool
}

type HdbCatalogHdbActionLog struct {
	ID                 uuid.UUID
	ActionName         pgtype.Text
	InputPayload       []byte
	RequestHeaders     []byte
	SessionVariables   []byte
	ResponsePayload    []byte
	Errors             []byte
	CreatedAt          pgtype.Timestamptz
	ResponseReceivedAt pgtype.Timestamptz
	Status             string
}

type HdbCatalogHdbCronEvent struct {
	ID            string
	TriggerName   string
	ScheduledTime pgtype.Timestamptz
	Status        string
	Tries         int32
	CreatedAt     pgtype.Timestamptz
	NextRetryAt   pgtype.Timestamptz
}

type HdbCatalogHdbCronEventInvocationLog struct {
	ID        string
	EventID   pgtype.Text
	Status    pgtype.Int4
	Request   []byte
	Response  []byte
	CreatedAt pgtype.Timestamptz
}

type HdbCatalogHdbEventLogCleanup struct {
	ID                         string
	TriggerName                string
	ScheduledAt                pgtype.Timestamp
	DeletedEventLogs           pgtype.Int4
	DeletedEventInvocationLogs pgtype.Int4
	Status                     string
}

type HdbCatalogHdbMetadatum struct {
	ID              int32
	Metadata        []byte
	ResourceVersion int32
}

type HdbCatalogHdbScheduledEvent struct {
	ID            string
	WebhookConf   []byte
	ScheduledTime pgtype.Timestamptz
	RetryConf     []byte
	Payload       []byte
	HeaderConf    []byte
	Status        string
	Tries         int32
	CreatedAt     pgtype.Timestamptz
	NextRetryAt   pgtype.Timestamptz
	Comment       pgtype.Text
}

type HdbCatalogHdbScheduledEventInvocationLog struct {
	ID        string
	EventID   pgtype.Text
	Status    pgtype.Int4
	Request   []byte
	Response  []byte
	CreatedAt pgtype.Timestamptz
}

type HdbCatalogHdbSchemaNotification struct {
	ID              int32
	Notification    []byte
	ResourceVersion int32
	InstanceID      uuid.UUID
	UpdatedAt       pgtype.Timestamptz
}

type HdbCatalogHdbSourceCatalogVersion struct {
	Version    string
	UpgradedOn pgtype.Timestamptz
}

type HdbCatalogHdbVersion struct {
	HasuraUuid     uuid.UUID
	Version        string
	UpgradedOn     pgtype.Timestamptz
	CliState       []byte
	ConsoleState   []byte
	EeClientID     pgtype.Text
	EeClientSecret pgtype.Text
}

type Organization struct {
	ID                   uuid.UUID
	CreatedAt            pgtype.Timestamptz
	UpdatedAt            pgtype.Timestamptz
	Name                 string
	Slug                 string
	PlanID               uuid.UUID
	StripeSubscriptionID pgtype.Text
	StripeCustomerID     pgtype.Text
	Status               string
	StatusComment        pgtype.Text
	Threshold            int32
	CurrentThreshold     string
}

type OrganizationCostsThreshold struct {
	Value   string
	Comment pgtype.Text
}

type OrganizationMember struct {
	ID             uuid.UUID
	CreatedAt      pgtype.Timestamptz
	UpdatedAt      pgtype.Timestamptz
	OrganizationID uuid.UUID
	UserID         uuid.UUID
	Role           string
}

type OrganizationMemberInvite struct {
	ID             uuid.UUID
	CreatedAt      pgtype.Timestamptz
	UpdatedAt      pgtype.Timestamptz
	OrganizationID uuid.UUID
	Email          interface{}
	Role           string
}

type OrganizationMembersRole struct {
	Value   string
	Comment string
}

type OrganizationNewRequest struct {
	ID        uuid.UUID
	CreatedAt pgtype.Timestamptz
	SessionID string
	UserID    uuid.UUID
	PlanID    uuid.UUID
	Name      string
	Slug      string
}

type OrganizationStatus struct {
	Value   string
	Comment string
}

type PaymentMethod struct {
	ID                    uuid.UUID
	CreatedAt             pgtype.Timestamptz
	StripePaymentMethodID string
	WorkspaceID           uuid.UUID
	AddedByUserID         uuid.UUID
	CardLast4             string
	CardBrand             string
	CardExpMonth          int32
	CardExpYear           int32
	IsDefault             bool
}

type Plan struct {
	ID                                 uuid.UUID
	CreatedAt                          pgtype.Timestamptz
	UpdatedAt                          pgtype.Timestamptz
	Name                               string
	IsFree                             bool
	StripePriceID                      string
	FeatureBackupEnabled               bool
	FeatureMaxDbSize                   int32
	FeatureCustomDomainEnabled         bool
	FeatureCustomEmailTemplatesEnabled bool
	Price                              int32
	Sort                               int32
	IsDefault                          bool
	FeatureMaxFilesSize                pgtype.Int4
	// Function execution timeout in seconds
	FeatureFunctionExecutionTimeout int32
	// Max number of functions to deploy per git deployment
	FeatureMaxNumberOfFunctionsPerDeployment int32
	// Weather or not to deploy email templates for git deployments
	FeatureDeployEmailTemplates        bool
	IsPublic                           bool
	FeatureCustomResources             bool
	StripePriceIDDedicatedCompute      string
	StripePriceIDEgressUsageMb         string
	StripePriceIDFunctionsUsageSeconds string
	StripePriceIDFunctionsAmount       string
	StripePriceIDCustomDomains         string
	StripePriceIDPersistentVolumesGb   string
	Deprecated                         bool
	Individual                         bool
	FeatureAdvancedGraphql             bool
	FeatureBackupRetentionDays         int32
	StripePriceIDPitr                  string
}

type Region struct {
	ID              uuid.UUID
	CreatedAt       pgtype.Timestamptz
	UpdatedAt       pgtype.Timestamptz
	City            string
	CountryCode     string
	IsGdprCompliant bool
	AwsName         string
	Active          bool
	Type            string
	Description     pgtype.Text
	Domain          string
	Name            string
}

type RegionType struct {
	Type    string
	Comment string
}

type RegionsAllowedOrganization struct {
	ID             uuid.UUID
	CreatedAt      pgtype.Timestamptz
	UpdatedAt      pgtype.Timestamptz
	Description    string
	RegionID       uuid.UUID
	OrganizationID uuid.UUID
}

type RegionsAllowedWorkspace struct {
	ID          uuid.UUID
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	Description string
	RegionID    uuid.UUID
	WorkspaceID uuid.UUID
}

type RunService struct {
	ID             uuid.UUID
	CreatedAt      pgtype.Timestamptz
	UpdatedAt      pgtype.Timestamptz
	AppID          uuid.UUID
	MimirConfigEnc pgtype.Text
	Subdomain      string
}

// Software type: hasura, postgres, hasura-auth ...
type SoftwareType struct {
	Type    string
	Comment string
}

type SoftwareVersion struct {
	ID       uuid.UUID
	Version  string
	Software string
}

type StorageBucket struct {
	ID                   string
	CreatedAt            pgtype.Timestamptz
	UpdatedAt            pgtype.Timestamptz
	DownloadExpiration   int32
	MinUploadFileSize    int32
	MaxUploadFileSize    int32
	CacheControl         pgtype.Text
	PresignedUrlsEnabled bool
}

type StorageFile struct {
	ID               uuid.UUID
	CreatedAt        pgtype.Timestamptz
	UpdatedAt        pgtype.Timestamptz
	BucketID         string
	Name             pgtype.Text
	Size             pgtype.Int4
	MimeType         pgtype.Text
	Etag             pgtype.Text
	IsUploaded       pgtype.Bool
	UploadedByUserID pgtype.UUID
	Metadata         []byte
}

type StorageSchemaMigration struct {
	Version int64
	Dirty   bool
}

type StorageVirus struct {
	ID          uuid.UUID
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	FileID      uuid.UUID
	Filename    string
	Virus       string
	UserSession []byte
}

type Workspace struct {
	ID               uuid.UUID
	Name             string
	Slug             string
	StripeCustomerID pgtype.Text
	Email            string
	CreatorUserID    pgtype.UUID
	// Address line 1 (e.g., street, PO Box, or company name).
	AddressLine1 string
	// Address line 2 (e.g., apartment, suite, unit, or building).
	AddressLine2 string
	// City, district, suburb, town, or village.
	AddressCity string
	// ZIP or postal code.
	AddressPostalCode string
	// State, county, province, or region.
	AddressState string
	// Two-letter country code (ISO 3166-1 alpha-2).
	AddressCountryCode pgtype.Text
	TaxIDType          string
	TaxIDValue         string
	CompanyName        string
	CreatedAt          pgtype.Timestamptz
	UpdatedAt          pgtype.Timestamptz
}

type WorkspaceMember struct {
	ID          uuid.UUID
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	UserID      uuid.UUID
	WorkspaceID uuid.UUID
	// owner or member
	Type string
}

type WorkspaceMemberInvite struct {
	ID          uuid.UUID
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	WorkspaceID uuid.UUID
	Email       interface{}
	// owner or member
	MemberType      string
	InvitedByUserID uuid.UUID
	IsAccepted      pgtype.Bool
}
