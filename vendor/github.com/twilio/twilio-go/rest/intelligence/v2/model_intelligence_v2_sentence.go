/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Intelligence
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"

	"github.com/twilio/twilio-go/client"
)

// IntelligenceV2Sentence struct for IntelligenceV2Sentence
type IntelligenceV2Sentence struct {
	// The channel number.
	MediaChannel int `json:"media_channel,omitempty"`
	// The index of the sentence in the transcript.
	SentenceIndex int `json:"sentence_index,omitempty"`
	// Offset from the beginning of the transcript when this sentence starts.
	StartTime *float32 `json:"start_time,omitempty"`
	// Offset from the beginning of the transcript when this sentence ends.
	EndTime *float32 `json:"end_time,omitempty"`
	// Transcript text.
	Transcript *string `json:"transcript,omitempty"`
	// A 34 character string that uniquely identifies this Sentence.
	Sid        *string  `json:"sid,omitempty"`
	Confidence *float32 `json:"confidence,omitempty"`
	// Detailed information for each of the words of the given Sentence.
	Words *[]interface{} `json:"words,omitempty"`
}

func (response *IntelligenceV2Sentence) UnmarshalJSON(bytes []byte) (err error) {
	raw := struct {
		MediaChannel  int            `json:"media_channel"`
		SentenceIndex int            `json:"sentence_index"`
		StartTime     *interface{}   `json:"start_time"`
		EndTime       *interface{}   `json:"end_time"`
		Transcript    *string        `json:"transcript"`
		Sid           *string        `json:"sid"`
		Confidence    *interface{}   `json:"confidence"`
		Words         *[]interface{} `json:"words"`
	}{}

	if err = json.Unmarshal(bytes, &raw); err != nil {
		return err
	}

	*response = IntelligenceV2Sentence{
		MediaChannel:  raw.MediaChannel,
		SentenceIndex: raw.SentenceIndex,
		Transcript:    raw.Transcript,
		Sid:           raw.Sid,
		Words:         raw.Words,
	}

	responseStartTime, err := client.UnmarshalFloat32(raw.StartTime)
	if err != nil {
		return err
	}
	response.StartTime = responseStartTime

	responseEndTime, err := client.UnmarshalFloat32(raw.EndTime)
	if err != nil {
		return err
	}
	response.EndTime = responseEndTime

	responseConfidence, err := client.UnmarshalFloat32(raw.Confidence)
	if err != nil {
		return err
	}
	response.Confidence = responseConfidence

	return
}
