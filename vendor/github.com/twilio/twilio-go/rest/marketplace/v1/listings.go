/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Marketplace
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"net/url"
)

// Optional parameters for the method 'CreateModuleData'
type CreateModuleDataParams struct {
	// A JSON object containing essential attributes that define a Listing.
	ModuleInfo *string `json:"ModuleInfo,omitempty"`
	// A JSON object for providing Listing-specific configuration. Contains button setup, notification URL, and more.
	Configuration *string `json:"Configuration,omitempty"`
}

func (params *CreateModuleDataParams) SetModuleInfo(ModuleInfo string) *CreateModuleDataParams {
	params.ModuleInfo = &ModuleInfo
	return params
}
func (params *CreateModuleDataParams) SetConfiguration(Configuration string) *CreateModuleDataParams {
	params.Configuration = &Configuration
	return params
}

// This endpoint creates a Listing based on the given data.
func (c *ApiService) CreateModuleData(params *CreateModuleDataParams) (*MarketplaceV1ModuleDataManagement, error) {
	path := "/v1/Listings"

	data := url.Values{}
	headers := map[string]interface{}{
		"Content-Type": "application/x-www-form-urlencoded",
	}

	if params != nil && params.ModuleInfo != nil {
		data.Set("ModuleInfo", *params.ModuleInfo)
	}
	if params != nil && params.Configuration != nil {
		data.Set("Configuration", *params.Configuration)
	}

	resp, err := c.requestHandler.Post(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()

	ps := &MarketplaceV1ModuleDataManagement{}
	if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
		return nil, err
	}

	return ps, err
}

// This endpoint returns the Listings owned by the authenticated Account.
func (c *ApiService) FetchModuleDataForListingOwner() (*FetchModuleDataForListingOwnerResponse, error) {
	path := "/v1/Listings"

	data := url.Values{}
	headers := map[string]interface{}{
		"Content-Type": "application/x-www-form-urlencoded",
	}

	resp, err := c.requestHandler.Get(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()

	ps := &FetchModuleDataForListingOwnerResponse{}
	if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
		return nil, err
	}

	return ps, err
}
