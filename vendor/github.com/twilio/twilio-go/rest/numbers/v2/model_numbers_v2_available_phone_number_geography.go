/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"

	"github.com/twilio/twilio-go/client"
)

// NumbersV2AvailablePhoneNumberGeography The geographic information associated with the phone number.
type NumbersV2AvailablePhoneNumberGeography struct {
	IsoCountry string  `json:"IsoCountry,omitempty"`
	Region     string  `json:"Region,omitempty"`
	Locality   string  `json:"Locality,omitempty"`
	PostalCode string  `json:"PostalCode,omitempty"`
	Latitude   float32 `json:"Latitude,omitempty"`
	Longitude  float32 `json:"Longitude,omitempty"`
	Lata       string  `json:"Lata,omitempty"`
	RateCenter string  `json:"RateCenter,omitempty"`
}

func (response *NumbersV2AvailablePhoneNumberGeography) UnmarshalJSON(bytes []byte) (err error) {
	raw := struct {
		IsoCountry string      `json:"IsoCountry"`
		Region     string      `json:"Region"`
		Locality   string      `json:"Locality"`
		PostalCode string      `json:"PostalCode"`
		Latitude   interface{} `json:"Latitude"`
		Longitude  interface{} `json:"Longitude"`
		Lata       string      `json:"Lata"`
		RateCenter string      `json:"RateCenter"`
	}{}

	if err = json.Unmarshal(bytes, &raw); err != nil {
		return err
	}

	*response = NumbersV2AvailablePhoneNumberGeography{
		IsoCountry: raw.IsoCountry,
		Region:     raw.Region,
		Locality:   raw.Locality,
		PostalCode: raw.PostalCode,
		Lata:       raw.Lata,
		RateCenter: raw.RateCenter,
	}

	responseLatitude, err := client.UnmarshalFloat32(&raw.Latitude)
	if err != nil {
		return err
	}
	response.Latitude = *responseLatitude

	responseLongitude, err := client.UnmarshalFloat32(&raw.Longitude)
	if err != nil {
		return err
	}
	response.Longitude = *responseLongitude

	return
}
