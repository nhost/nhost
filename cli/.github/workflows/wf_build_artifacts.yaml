---
on:
  workflow_call:
    inputs:
      GIT_REF:
        type: string
        required: false
      VERSION:
        type: string
        required: true
      GOOS:
        type: string
        required: true
      GOARCH:
        type: string
        required: true
    secrets:
      NHOST_PAT:
        required: true

jobs:
  artifacts:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ inputs.GIT_REF }}
        submodules: true

    - uses: cachix/install-nix-action@v27
      with:
        install_url: "https://releases.nixos.org/nix/nix-2.22.3/install"
        install_options: "--no-daemon"
        extra_nix_config: |
          experimental-features = nix-command flakes
          sandbox = false
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          substituters = https://cache.nixos.org/?priority=40
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

    - name: Compute common env vars
      id: vars
      run: |
        echo "VERSION=$(make get-version VERSION=${{ inputs.VERSION }})" >> $GITHUB_OUTPUT

    - name: "Build artifact"
      run: |
        make build ARCH=${{ inputs.GOARCH }} OS=${{ inputs.GOOS }}
        find -L result -type f -exec cp {} nhost-cli \;

    - name: "Push artifact to artifact repository"
      uses: actions/upload-artifact@v4
      with:
        name: cli-${{ steps.vars.outputs.VERSION }}-${{ inputs.GOOS }}-${{ inputs.GOARCH }}
        path: nhost-cli
        retention-days: 7

    - name: "Build docker-image"
      run: |
        make build-docker-image ARCH=${{ inputs.GOARCH }}
      if: ${{ ( inputs.GOOS == 'linux' ) }}

    - name: "Create a new project"
      run: |
        export NHOST_DOMAIN=staging.nhost.run
        export NHOST_CONFIGSERVER_IMAGE=nhost/cli:${{ steps.vars.outputs.VERSION }}

        mkdir new-project
        cd new-project
        ../nhost-cli login --pat ${{ secrets.NHOST_PAT }}
        ../nhost-cli init
        ../nhost-cli up --down-on-error
        ../nhost-cli down
      if: ${{ ( inputs.GOOS == 'linux' && inputs.GOARCH == 'amd64' ) }}

    - name: "Push docker-image to artifact repository"
      uses: actions/upload-artifact@v4
      with:
        name: cli-docker-image-${{ steps.vars.outputs.VERSION }}-${{ inputs.GOOS }}-${{ inputs.GOARCH }}
        path: result
        retention-days: 7
      if: ${{ ( inputs.GOOS == 'linux' ) }}
