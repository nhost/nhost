// Code generated by MockGen. DO NOT EDIT.
// Source: jwt.go
//
// Generated by this command:
//
//	mockgen -package mock -destination mock/jwt.go --source=jwt.go
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCustomClaimer is a mock of CustomClaimer interface.
type MockCustomClaimer struct {
	ctrl     *gomock.Controller
	recorder *MockCustomClaimerMockRecorder
	isgomock struct{}
}

// MockCustomClaimerMockRecorder is the mock recorder for MockCustomClaimer.
type MockCustomClaimerMockRecorder struct {
	mock *MockCustomClaimer
}

// NewMockCustomClaimer creates a new mock instance.
func NewMockCustomClaimer(ctrl *gomock.Controller) *MockCustomClaimer {
	mock := &MockCustomClaimer{ctrl: ctrl}
	mock.recorder = &MockCustomClaimerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomClaimer) EXPECT() *MockCustomClaimerMockRecorder {
	return m.recorder
}

// GetClaims mocks base method.
func (m *MockCustomClaimer) GetClaims(ctx context.Context, userID string) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClaims", ctx, userID)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClaims indicates an expected call of GetClaims.
func (mr *MockCustomClaimerMockRecorder) GetClaims(ctx, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClaims", reflect.TypeOf((*MockCustomClaimer)(nil).GetClaims), ctx, userID)
}
