/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Hasura Remote Schema API
 * API for managing remote schemas in Hasura
 * OpenAPI spec version: 1.0.0
 */
import type { GraphQLTypeForVisualization as __GraphQLTypeForVisualization } from './graphQLTypeForVisualization';
import type { GraphQLTypeForVisualizationEnumValuesItem } from './graphQLTypeForVisualizationEnumValuesItem';
import type { GraphQLTypeForVisualizationFieldsItem } from './graphQLTypeForVisualizationFieldsItem';
import type { GraphQLTypeForVisualizationKind } from './graphQLTypeForVisualizationKind';

/**
 * GraphQL type definition for tree visualization
 */
export interface GraphQLTypeForVisualization {
  /** The kind of GraphQL type */
  kind: GraphQLTypeForVisualizationKind;
  /**
   * Name of the type (null for wrapper types like LIST/NON_NULL)
   * @nullable
   */
  name: string | null;
  /**
   * Description of the type
   * @nullable
   */
  description?: string | null;
  /**
   * Fields for OBJECT and INTERFACE types (basic info for tree visualization)
   * @nullable
   */
  fields?: GraphQLTypeForVisualizationFieldsItem[] | null;
  /**
   * Interfaces implemented by OBJECT types
   * @nullable
   */
  interfaces?: GraphQLTypeForVisualization[] | null;
  /**
   * Values for ENUM types
   * @nullable
   */
  enumValues?: GraphQLTypeForVisualizationEnumValuesItem[] | null;
  /**
   * Possible types for UNION and INTERFACE types
   * @nullable
   */
  possibleTypes?: GraphQLTypeForVisualization[] | null;
  /**
   * Wrapped type for LIST and NON_NULL types
   * @nullable
   */
  ofType?: __GraphQLTypeForVisualization;
  [key: string]: unknown;
}
