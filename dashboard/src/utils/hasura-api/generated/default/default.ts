/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Hasura Remote Schema API
 * API for managing remote schemas in Hasura
 * OpenAPI spec version: 1.0.0
 */
import type {
  ErrorResponse,
  MetadataOperation200,
  MetadataOperationBody,
} from '.././schemas';

import type { CustomFetchOptions } from '../../customFetch';
import { customFetch } from '../../customFetch';

/**
 * Endpoint for all metadata operations
 * @summary Metadata API endpoint
 */
export type metadataOperationResponse200 = {
  data: MetadataOperation200;
  status: 200;
};

export type metadataOperationResponse400 = {
  data: ErrorResponse;
  status: 400;
};

export type metadataOperationResponseComposite =
  | metadataOperationResponse200
  | metadataOperationResponse400;

export type metadataOperationResponse = metadataOperationResponseComposite & {
  headers: Headers;
};

export const getMetadataOperationUrl = () => {
  return `/v1/metadata`;
};

export const metadataOperation = async (
  metadataOperationBody: MetadataOperationBody,
  options?: CustomFetchOptions,
): Promise<metadataOperationResponse> => {
  return customFetch<metadataOperationResponse>(getMetadataOperationUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(metadataOperationBody),
  });
};
